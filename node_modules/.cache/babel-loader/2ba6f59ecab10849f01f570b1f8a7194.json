{"ast":null,"code":"/*!\n * MotionPathPlugin 3.11.2\n * https://greensock.com\n *\n * @license Copyright 2008-2022, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nimport { getRawPath, cacheRawPathMeasurements, getPositionOnPath, pointsToSegment, flatPointsToSegment, sliceRawPath, stringToRawPath, rawPathToString, transformRawPath, convertToPath as _convertToPath } from \"./utils/paths.js\";\nimport { getGlobalMatrix } from \"./utils/matrix.js\";\n\nvar _xProps = \"x,translateX,left,marginLeft,xPercent\".split(\",\"),\n    _yProps = \"y,translateY,top,marginTop,yPercent\".split(\",\"),\n    _DEG2RAD = Math.PI / 180,\n    gsap,\n    PropTween,\n    _getUnit,\n    _toArray,\n    _getStyleSaver,\n    _reverting,\n    _getGSAP = function _getGSAP() {\n  return gsap || typeof window !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n},\n    _populateSegmentFromArray = function _populateSegmentFromArray(segment, values, property, mode) {\n  //mode: 0 = x but don't fill y yet, 1 = y, 2 = x and fill y with 0.\n  var l = values.length,\n      si = mode === 2 ? 0 : mode,\n      i = 0,\n      v;\n\n  for (; i < l; i++) {\n    segment[si] = v = parseFloat(values[i][property]);\n    mode === 2 && (segment[si + 1] = 0);\n    si += 2;\n  }\n\n  return segment;\n},\n    _getPropNum = function _getPropNum(target, prop, unit) {\n  return parseFloat(target._gsap.get(target, prop, unit || \"px\")) || 0;\n},\n    _relativize = function _relativize(segment) {\n  var x = segment[0],\n      y = segment[1],\n      i;\n\n  for (i = 2; i < segment.length; i += 2) {\n    x = segment[i] += x;\n    y = segment[i + 1] += y;\n  }\n},\n    // feed in an array of quadratic bezier points like [{x: 0, y: 0}, ...] and it'll convert it to cubic bezier\n// _quadToCubic = points => {\n// \tlet cubic = [],\n// \t\tl = points.length - 1,\n// \t\ti = 1,\n// \t\ta, b, c;\n// \tfor (; i < l; i+=2) {\n// \t\ta = points[i-1];\n// \t\tb = points[i];\n// \t\tc = points[i+1];\n// \t\tcubic.push(a, {x: (2 * b.x + a.x) / 3, y: (2 * b.y + a.y) / 3}, {x: (2 * b.x + c.x) / 3, y: (2 * b.y + c.y) / 3});\n// \t}\n// \tcubic.push(points[l]);\n// \treturn cubic;\n// },\n_segmentToRawPath = function _segmentToRawPath(plugin, segment, target, x, y, slicer, vars, unitX, unitY) {\n  if (vars.type === \"cubic\") {\n    segment = [segment];\n  } else {\n    vars.fromCurrent !== false && segment.unshift(_getPropNum(target, x, unitX), y ? _getPropNum(target, y, unitY) : 0);\n    vars.relative && _relativize(segment);\n    var pointFunc = y ? pointsToSegment : flatPointsToSegment;\n    segment = [pointFunc(segment, vars.curviness)];\n  }\n\n  segment = slicer(_align(segment, target, vars));\n\n  _addDimensionalPropTween(plugin, target, x, segment, \"x\", unitX);\n\n  y && _addDimensionalPropTween(plugin, target, y, segment, \"y\", unitY);\n  return cacheRawPathMeasurements(segment, vars.resolution || (vars.curviness === 0 ? 20 : 12)); //when curviness is 0, it creates control points right on top of the anchors which makes it more sensitive to resolution, thus we change the default accordingly.\n},\n    _emptyFunc = function _emptyFunc(v) {\n  return v;\n},\n    _numExp = /[-+\\.]*\\d+\\.?(?:e-|e\\+)?\\d*/g,\n    _originToPoint = function _originToPoint(element, origin, parentMatrix) {\n  // origin is an array of normalized values (0-1) in relation to the width/height, so [0.5, 0.5] would be the center. It can also be \"auto\" in which case it will be the top left unless it's a <path>, when it will start at the beginning of the path itself.\n  var m = getGlobalMatrix(element),\n      x = 0,\n      y = 0,\n      svg;\n\n  if ((element.tagName + \"\").toLowerCase() === \"svg\") {\n    svg = element.viewBox.baseVal;\n    svg.width || (svg = {\n      width: +element.getAttribute(\"width\"),\n      height: +element.getAttribute(\"height\")\n    });\n  } else {\n    svg = origin && element.getBBox && element.getBBox();\n  }\n\n  if (origin && origin !== \"auto\") {\n    x = origin.push ? origin[0] * (svg ? svg.width : element.offsetWidth || 0) : origin.x;\n    y = origin.push ? origin[1] * (svg ? svg.height : element.offsetHeight || 0) : origin.y;\n  }\n\n  return parentMatrix.apply(x || y ? m.apply({\n    x: x,\n    y: y\n  }) : {\n    x: m.e,\n    y: m.f\n  });\n},\n    _getAlignMatrix = function _getAlignMatrix(fromElement, toElement, fromOrigin, toOrigin) {\n  var parentMatrix = getGlobalMatrix(fromElement.parentNode, true, true),\n      m = parentMatrix.clone().multiply(getGlobalMatrix(toElement)),\n      fromPoint = _originToPoint(fromElement, fromOrigin, parentMatrix),\n      _originToPoint2 = _originToPoint(toElement, toOrigin, parentMatrix),\n      x = _originToPoint2.x,\n      y = _originToPoint2.y,\n      p;\n\n  m.e = m.f = 0;\n\n  if (toOrigin === \"auto\" && toElement.getTotalLength && toElement.tagName.toLowerCase() === \"path\") {\n    p = toElement.getAttribute(\"d\").match(_numExp) || [];\n    p = m.apply({\n      x: +p[0],\n      y: +p[1]\n    });\n    x += p.x;\n    y += p.y;\n  } //if (p || (toElement.getBBox && fromElement.getBBox && toElement.ownerSVGElement === fromElement.ownerSVGElement)) {\n\n\n  if (p) {\n    p = m.apply(toElement.getBBox());\n    x -= p.x;\n    y -= p.y;\n  }\n\n  m.e = x - fromPoint.x;\n  m.f = y - fromPoint.y;\n  return m;\n},\n    _align = function _align(rawPath, target, _ref) {\n  var align = _ref.align,\n      matrix = _ref.matrix,\n      offsetX = _ref.offsetX,\n      offsetY = _ref.offsetY,\n      alignOrigin = _ref.alignOrigin;\n\n  var x = rawPath[0][0],\n      y = rawPath[0][1],\n      curX = _getPropNum(target, \"x\"),\n      curY = _getPropNum(target, \"y\"),\n      alignTarget,\n      m,\n      p;\n\n  if (!rawPath || !rawPath.length) {\n    return getRawPath(\"M0,0L0,0\");\n  }\n\n  if (align) {\n    if (align === \"self\" || (alignTarget = _toArray(align)[0] || target) === target) {\n      transformRawPath(rawPath, 1, 0, 0, 1, curX - x, curY - y);\n    } else {\n      if (alignOrigin && alignOrigin[2] !== false) {\n        gsap.set(target, {\n          transformOrigin: alignOrigin[0] * 100 + \"% \" + alignOrigin[1] * 100 + \"%\"\n        });\n      } else {\n        alignOrigin = [_getPropNum(target, \"xPercent\") / -100, _getPropNum(target, \"yPercent\") / -100];\n      }\n\n      m = _getAlignMatrix(target, alignTarget, alignOrigin, \"auto\");\n      p = m.apply({\n        x: x,\n        y: y\n      });\n      transformRawPath(rawPath, m.a, m.b, m.c, m.d, curX + m.e - (p.x - m.e), curY + m.f - (p.y - m.f));\n    }\n  }\n\n  if (matrix) {\n    transformRawPath(rawPath, matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f);\n  } else if (offsetX || offsetY) {\n    transformRawPath(rawPath, 1, 0, 0, 1, offsetX || 0, offsetY || 0);\n  }\n\n  return rawPath;\n},\n    _addDimensionalPropTween = function _addDimensionalPropTween(plugin, target, property, rawPath, pathProperty, forceUnit) {\n  var cache = target._gsap,\n      harness = cache.harness,\n      alias = harness && harness.aliases && harness.aliases[property],\n      prop = alias && alias.indexOf(\",\") < 0 ? alias : property,\n      pt = plugin._pt = new PropTween(plugin._pt, target, prop, 0, 0, _emptyFunc, 0, cache.set(target, prop, plugin));\n  pt.u = _getUnit(cache.get(target, prop, forceUnit)) || 0;\n  pt.path = rawPath;\n  pt.pp = pathProperty;\n\n  plugin._props.push(prop);\n},\n    _sliceModifier = function _sliceModifier(start, end) {\n  return function (rawPath) {\n    return start || end !== 1 ? sliceRawPath(rawPath, start, end) : rawPath;\n  };\n};\n\nexport var MotionPathPlugin = {\n  version: \"3.11.2\",\n  name: \"motionPath\",\n  register: function register(core, Plugin, propTween) {\n    gsap = core;\n    _getUnit = gsap.utils.getUnit;\n    _toArray = gsap.utils.toArray;\n    _getStyleSaver = gsap.core.getStyleSaver;\n\n    _reverting = gsap.core.reverting || function () {};\n\n    PropTween = propTween;\n  },\n  init: function init(target, vars, tween) {\n    if (!gsap) {\n      console.warn(\"Please gsap.registerPlugin(MotionPathPlugin)\");\n      return false;\n    }\n\n    if (!(typeof vars === \"object\" && !vars.style) || !vars.path) {\n      vars = {\n        path: vars\n      };\n    }\n\n    var rawPaths = [],\n        _vars = vars,\n        path = _vars.path,\n        autoRotate = _vars.autoRotate,\n        unitX = _vars.unitX,\n        unitY = _vars.unitY,\n        x = _vars.x,\n        y = _vars.y,\n        firstObj = path[0],\n        slicer = _sliceModifier(vars.start, \"end\" in vars ? vars.end : 1),\n        rawPath,\n        p;\n\n    this.rawPaths = rawPaths;\n    this.target = target;\n    this.tween = tween;\n    this.styles = _getStyleSaver && _getStyleSaver(target, \"transform\");\n\n    if (this.rotate = autoRotate || autoRotate === 0) {\n      //get the rotational data FIRST so that the setTransform() method is called in the correct order in the render() loop - rotation gets set last.\n      this.rOffset = parseFloat(autoRotate) || 0;\n      this.radians = !!vars.useRadians;\n      this.rProp = vars.rotation || \"rotation\"; // rotation property\n\n      this.rSet = target._gsap.set(target, this.rProp, this); // rotation setter\n\n      this.ru = _getUnit(target._gsap.get(target, this.rProp)) || 0; // rotation units\n    }\n\n    if (Array.isArray(path) && !(\"closed\" in path) && typeof firstObj !== \"number\") {\n      for (p in firstObj) {\n        if (!x && ~_xProps.indexOf(p)) {\n          x = p;\n        } else if (!y && ~_yProps.indexOf(p)) {\n          y = p;\n        }\n      }\n\n      if (x && y) {\n        //correlated values\n        rawPaths.push(_segmentToRawPath(this, _populateSegmentFromArray(_populateSegmentFromArray([], path, x, 0), path, y, 1), target, x, y, slicer, vars, unitX || _getUnit(path[0][x]), unitY || _getUnit(path[0][y])));\n      } else {\n        x = y = 0;\n      }\n\n      for (p in firstObj) {\n        p !== x && p !== y && rawPaths.push(_segmentToRawPath(this, _populateSegmentFromArray([], path, p, 2), target, p, 0, slicer, vars, _getUnit(path[0][p])));\n      }\n    } else {\n      rawPath = slicer(_align(getRawPath(vars.path), target, vars));\n      cacheRawPathMeasurements(rawPath, vars.resolution);\n      rawPaths.push(rawPath);\n\n      _addDimensionalPropTween(this, target, vars.x || \"x\", rawPath, \"x\", vars.unitX || \"px\");\n\n      _addDimensionalPropTween(this, target, vars.y || \"y\", rawPath, \"y\", vars.unitY || \"px\");\n    }\n  },\n  render: function render(ratio, data) {\n    var rawPaths = data.rawPaths,\n        i = rawPaths.length,\n        pt = data._pt;\n\n    if (data.tween._time || !_reverting()) {\n      if (ratio > 1) {\n        ratio = 1;\n      } else if (ratio < 0) {\n        ratio = 0;\n      }\n\n      while (i--) {\n        getPositionOnPath(rawPaths[i], ratio, !i && data.rotate, rawPaths[i]);\n      }\n\n      while (pt) {\n        pt.set(pt.t, pt.p, pt.path[pt.pp] + pt.u, pt.d, ratio);\n        pt = pt._next;\n      }\n\n      data.rotate && data.rSet(data.target, data.rProp, rawPaths[0].angle * (data.radians ? _DEG2RAD : 1) + data.rOffset + data.ru, data, ratio);\n    } else {\n      data.styles.revert();\n    }\n  },\n  getLength: function getLength(path) {\n    return cacheRawPathMeasurements(getRawPath(path)).totalLength;\n  },\n  sliceRawPath: sliceRawPath,\n  getRawPath: getRawPath,\n  pointsToSegment: pointsToSegment,\n  stringToRawPath: stringToRawPath,\n  rawPathToString: rawPathToString,\n  transformRawPath: transformRawPath,\n  getGlobalMatrix: getGlobalMatrix,\n  getPositionOnPath: getPositionOnPath,\n  cacheRawPathMeasurements: cacheRawPathMeasurements,\n  convertToPath: function convertToPath(targets, swap) {\n    return _toArray(targets).map(function (target) {\n      return _convertToPath(target, swap !== false);\n    });\n  },\n  convertCoordinates: function convertCoordinates(fromElement, toElement, point) {\n    var m = getGlobalMatrix(toElement, true, true).multiply(getGlobalMatrix(fromElement));\n    return point ? m.apply(point) : m;\n  },\n  getAlignMatrix: _getAlignMatrix,\n  getRelativePosition: function getRelativePosition(fromElement, toElement, fromOrigin, toOrigin) {\n    var m = _getAlignMatrix(fromElement, toElement, fromOrigin, toOrigin);\n\n    return {\n      x: m.e,\n      y: m.f\n    };\n  },\n  arrayToRawPath: function arrayToRawPath(value, vars) {\n    vars = vars || {};\n\n    var segment = _populateSegmentFromArray(_populateSegmentFromArray([], value, vars.x || \"x\", 0), value, vars.y || \"y\", 1);\n\n    vars.relative && _relativize(segment);\n    return [vars.type === \"cubic\" ? segment : pointsToSegment(segment, vars.curviness)];\n  }\n};\n_getGSAP() && gsap.registerPlugin(MotionPathPlugin);\nexport { MotionPathPlugin as default };","map":{"version":3,"names":["getRawPath","cacheRawPathMeasurements","getPositionOnPath","pointsToSegment","flatPointsToSegment","sliceRawPath","stringToRawPath","rawPathToString","transformRawPath","convertToPath","_convertToPath","getGlobalMatrix","_xProps","split","_yProps","_DEG2RAD","Math","PI","gsap","PropTween","_getUnit","_toArray","_getStyleSaver","_reverting","_getGSAP","window","registerPlugin","_populateSegmentFromArray","segment","values","property","mode","l","length","si","i","v","parseFloat","_getPropNum","target","prop","unit","_gsap","get","_relativize","x","y","_segmentToRawPath","plugin","slicer","vars","unitX","unitY","type","fromCurrent","unshift","relative","pointFunc","curviness","_align","_addDimensionalPropTween","resolution","_emptyFunc","_numExp","_originToPoint","element","origin","parentMatrix","m","svg","tagName","toLowerCase","viewBox","baseVal","width","getAttribute","height","getBBox","push","offsetWidth","offsetHeight","apply","e","f","_getAlignMatrix","fromElement","toElement","fromOrigin","toOrigin","parentNode","clone","multiply","fromPoint","_originToPoint2","p","getTotalLength","match","rawPath","_ref","align","matrix","offsetX","offsetY","alignOrigin","curX","curY","alignTarget","set","transformOrigin","a","b","c","d","pathProperty","forceUnit","cache","harness","alias","aliases","indexOf","pt","_pt","u","path","pp","_props","_sliceModifier","start","end","MotionPathPlugin","version","name","register","core","Plugin","propTween","utils","getUnit","toArray","getStyleSaver","reverting","init","tween","console","warn","style","rawPaths","_vars","autoRotate","firstObj","styles","rotate","rOffset","radians","useRadians","rProp","rotation","rSet","ru","Array","isArray","render","ratio","data","_time","t","_next","angle","revert","getLength","totalLength","targets","swap","map","convertCoordinates","point","getAlignMatrix","getRelativePosition","arrayToRawPath","value","default"],"sources":["D:/ReactJS/DoAn_CN/my-app/node_modules/gsap/MotionPathPlugin.js"],"sourcesContent":["/*!\n * MotionPathPlugin 3.11.2\n * https://greensock.com\n *\n * @license Copyright 2008-2022, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nimport { getRawPath, cacheRawPathMeasurements, getPositionOnPath, pointsToSegment, flatPointsToSegment, sliceRawPath, stringToRawPath, rawPathToString, transformRawPath, convertToPath as _convertToPath } from \"./utils/paths.js\";\nimport { getGlobalMatrix } from \"./utils/matrix.js\";\n\nvar _xProps = \"x,translateX,left,marginLeft,xPercent\".split(\",\"),\n    _yProps = \"y,translateY,top,marginTop,yPercent\".split(\",\"),\n    _DEG2RAD = Math.PI / 180,\n    gsap,\n    PropTween,\n    _getUnit,\n    _toArray,\n    _getStyleSaver,\n    _reverting,\n    _getGSAP = function _getGSAP() {\n  return gsap || typeof window !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n},\n    _populateSegmentFromArray = function _populateSegmentFromArray(segment, values, property, mode) {\n  //mode: 0 = x but don't fill y yet, 1 = y, 2 = x and fill y with 0.\n  var l = values.length,\n      si = mode === 2 ? 0 : mode,\n      i = 0,\n      v;\n\n  for (; i < l; i++) {\n    segment[si] = v = parseFloat(values[i][property]);\n    mode === 2 && (segment[si + 1] = 0);\n    si += 2;\n  }\n\n  return segment;\n},\n    _getPropNum = function _getPropNum(target, prop, unit) {\n  return parseFloat(target._gsap.get(target, prop, unit || \"px\")) || 0;\n},\n    _relativize = function _relativize(segment) {\n  var x = segment[0],\n      y = segment[1],\n      i;\n\n  for (i = 2; i < segment.length; i += 2) {\n    x = segment[i] += x;\n    y = segment[i + 1] += y;\n  }\n},\n    // feed in an array of quadratic bezier points like [{x: 0, y: 0}, ...] and it'll convert it to cubic bezier\n// _quadToCubic = points => {\n// \tlet cubic = [],\n// \t\tl = points.length - 1,\n// \t\ti = 1,\n// \t\ta, b, c;\n// \tfor (; i < l; i+=2) {\n// \t\ta = points[i-1];\n// \t\tb = points[i];\n// \t\tc = points[i+1];\n// \t\tcubic.push(a, {x: (2 * b.x + a.x) / 3, y: (2 * b.y + a.y) / 3}, {x: (2 * b.x + c.x) / 3, y: (2 * b.y + c.y) / 3});\n// \t}\n// \tcubic.push(points[l]);\n// \treturn cubic;\n// },\n_segmentToRawPath = function _segmentToRawPath(plugin, segment, target, x, y, slicer, vars, unitX, unitY) {\n  if (vars.type === \"cubic\") {\n    segment = [segment];\n  } else {\n    vars.fromCurrent !== false && segment.unshift(_getPropNum(target, x, unitX), y ? _getPropNum(target, y, unitY) : 0);\n    vars.relative && _relativize(segment);\n    var pointFunc = y ? pointsToSegment : flatPointsToSegment;\n    segment = [pointFunc(segment, vars.curviness)];\n  }\n\n  segment = slicer(_align(segment, target, vars));\n\n  _addDimensionalPropTween(plugin, target, x, segment, \"x\", unitX);\n\n  y && _addDimensionalPropTween(plugin, target, y, segment, \"y\", unitY);\n  return cacheRawPathMeasurements(segment, vars.resolution || (vars.curviness === 0 ? 20 : 12)); //when curviness is 0, it creates control points right on top of the anchors which makes it more sensitive to resolution, thus we change the default accordingly.\n},\n    _emptyFunc = function _emptyFunc(v) {\n  return v;\n},\n    _numExp = /[-+\\.]*\\d+\\.?(?:e-|e\\+)?\\d*/g,\n    _originToPoint = function _originToPoint(element, origin, parentMatrix) {\n  // origin is an array of normalized values (0-1) in relation to the width/height, so [0.5, 0.5] would be the center. It can also be \"auto\" in which case it will be the top left unless it's a <path>, when it will start at the beginning of the path itself.\n  var m = getGlobalMatrix(element),\n      x = 0,\n      y = 0,\n      svg;\n\n  if ((element.tagName + \"\").toLowerCase() === \"svg\") {\n    svg = element.viewBox.baseVal;\n    svg.width || (svg = {\n      width: +element.getAttribute(\"width\"),\n      height: +element.getAttribute(\"height\")\n    });\n  } else {\n    svg = origin && element.getBBox && element.getBBox();\n  }\n\n  if (origin && origin !== \"auto\") {\n    x = origin.push ? origin[0] * (svg ? svg.width : element.offsetWidth || 0) : origin.x;\n    y = origin.push ? origin[1] * (svg ? svg.height : element.offsetHeight || 0) : origin.y;\n  }\n\n  return parentMatrix.apply(x || y ? m.apply({\n    x: x,\n    y: y\n  }) : {\n    x: m.e,\n    y: m.f\n  });\n},\n    _getAlignMatrix = function _getAlignMatrix(fromElement, toElement, fromOrigin, toOrigin) {\n  var parentMatrix = getGlobalMatrix(fromElement.parentNode, true, true),\n      m = parentMatrix.clone().multiply(getGlobalMatrix(toElement)),\n      fromPoint = _originToPoint(fromElement, fromOrigin, parentMatrix),\n      _originToPoint2 = _originToPoint(toElement, toOrigin, parentMatrix),\n      x = _originToPoint2.x,\n      y = _originToPoint2.y,\n      p;\n\n  m.e = m.f = 0;\n\n  if (toOrigin === \"auto\" && toElement.getTotalLength && toElement.tagName.toLowerCase() === \"path\") {\n    p = toElement.getAttribute(\"d\").match(_numExp) || [];\n    p = m.apply({\n      x: +p[0],\n      y: +p[1]\n    });\n    x += p.x;\n    y += p.y;\n  } //if (p || (toElement.getBBox && fromElement.getBBox && toElement.ownerSVGElement === fromElement.ownerSVGElement)) {\n\n\n  if (p) {\n    p = m.apply(toElement.getBBox());\n    x -= p.x;\n    y -= p.y;\n  }\n\n  m.e = x - fromPoint.x;\n  m.f = y - fromPoint.y;\n  return m;\n},\n    _align = function _align(rawPath, target, _ref) {\n  var align = _ref.align,\n      matrix = _ref.matrix,\n      offsetX = _ref.offsetX,\n      offsetY = _ref.offsetY,\n      alignOrigin = _ref.alignOrigin;\n\n  var x = rawPath[0][0],\n      y = rawPath[0][1],\n      curX = _getPropNum(target, \"x\"),\n      curY = _getPropNum(target, \"y\"),\n      alignTarget,\n      m,\n      p;\n\n  if (!rawPath || !rawPath.length) {\n    return getRawPath(\"M0,0L0,0\");\n  }\n\n  if (align) {\n    if (align === \"self\" || (alignTarget = _toArray(align)[0] || target) === target) {\n      transformRawPath(rawPath, 1, 0, 0, 1, curX - x, curY - y);\n    } else {\n      if (alignOrigin && alignOrigin[2] !== false) {\n        gsap.set(target, {\n          transformOrigin: alignOrigin[0] * 100 + \"% \" + alignOrigin[1] * 100 + \"%\"\n        });\n      } else {\n        alignOrigin = [_getPropNum(target, \"xPercent\") / -100, _getPropNum(target, \"yPercent\") / -100];\n      }\n\n      m = _getAlignMatrix(target, alignTarget, alignOrigin, \"auto\");\n      p = m.apply({\n        x: x,\n        y: y\n      });\n      transformRawPath(rawPath, m.a, m.b, m.c, m.d, curX + m.e - (p.x - m.e), curY + m.f - (p.y - m.f));\n    }\n  }\n\n  if (matrix) {\n    transformRawPath(rawPath, matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f);\n  } else if (offsetX || offsetY) {\n    transformRawPath(rawPath, 1, 0, 0, 1, offsetX || 0, offsetY || 0);\n  }\n\n  return rawPath;\n},\n    _addDimensionalPropTween = function _addDimensionalPropTween(plugin, target, property, rawPath, pathProperty, forceUnit) {\n  var cache = target._gsap,\n      harness = cache.harness,\n      alias = harness && harness.aliases && harness.aliases[property],\n      prop = alias && alias.indexOf(\",\") < 0 ? alias : property,\n      pt = plugin._pt = new PropTween(plugin._pt, target, prop, 0, 0, _emptyFunc, 0, cache.set(target, prop, plugin));\n  pt.u = _getUnit(cache.get(target, prop, forceUnit)) || 0;\n  pt.path = rawPath;\n  pt.pp = pathProperty;\n\n  plugin._props.push(prop);\n},\n    _sliceModifier = function _sliceModifier(start, end) {\n  return function (rawPath) {\n    return start || end !== 1 ? sliceRawPath(rawPath, start, end) : rawPath;\n  };\n};\n\nexport var MotionPathPlugin = {\n  version: \"3.11.2\",\n  name: \"motionPath\",\n  register: function register(core, Plugin, propTween) {\n    gsap = core;\n    _getUnit = gsap.utils.getUnit;\n    _toArray = gsap.utils.toArray;\n    _getStyleSaver = gsap.core.getStyleSaver;\n\n    _reverting = gsap.core.reverting || function () {};\n\n    PropTween = propTween;\n  },\n  init: function init(target, vars, tween) {\n    if (!gsap) {\n      console.warn(\"Please gsap.registerPlugin(MotionPathPlugin)\");\n      return false;\n    }\n\n    if (!(typeof vars === \"object\" && !vars.style) || !vars.path) {\n      vars = {\n        path: vars\n      };\n    }\n\n    var rawPaths = [],\n        _vars = vars,\n        path = _vars.path,\n        autoRotate = _vars.autoRotate,\n        unitX = _vars.unitX,\n        unitY = _vars.unitY,\n        x = _vars.x,\n        y = _vars.y,\n        firstObj = path[0],\n        slicer = _sliceModifier(vars.start, \"end\" in vars ? vars.end : 1),\n        rawPath,\n        p;\n\n    this.rawPaths = rawPaths;\n    this.target = target;\n    this.tween = tween;\n    this.styles = _getStyleSaver && _getStyleSaver(target, \"transform\");\n\n    if (this.rotate = autoRotate || autoRotate === 0) {\n      //get the rotational data FIRST so that the setTransform() method is called in the correct order in the render() loop - rotation gets set last.\n      this.rOffset = parseFloat(autoRotate) || 0;\n      this.radians = !!vars.useRadians;\n      this.rProp = vars.rotation || \"rotation\"; // rotation property\n\n      this.rSet = target._gsap.set(target, this.rProp, this); // rotation setter\n\n      this.ru = _getUnit(target._gsap.get(target, this.rProp)) || 0; // rotation units\n    }\n\n    if (Array.isArray(path) && !(\"closed\" in path) && typeof firstObj !== \"number\") {\n      for (p in firstObj) {\n        if (!x && ~_xProps.indexOf(p)) {\n          x = p;\n        } else if (!y && ~_yProps.indexOf(p)) {\n          y = p;\n        }\n      }\n\n      if (x && y) {\n        //correlated values\n        rawPaths.push(_segmentToRawPath(this, _populateSegmentFromArray(_populateSegmentFromArray([], path, x, 0), path, y, 1), target, x, y, slicer, vars, unitX || _getUnit(path[0][x]), unitY || _getUnit(path[0][y])));\n      } else {\n        x = y = 0;\n      }\n\n      for (p in firstObj) {\n        p !== x && p !== y && rawPaths.push(_segmentToRawPath(this, _populateSegmentFromArray([], path, p, 2), target, p, 0, slicer, vars, _getUnit(path[0][p])));\n      }\n    } else {\n      rawPath = slicer(_align(getRawPath(vars.path), target, vars));\n      cacheRawPathMeasurements(rawPath, vars.resolution);\n      rawPaths.push(rawPath);\n\n      _addDimensionalPropTween(this, target, vars.x || \"x\", rawPath, \"x\", vars.unitX || \"px\");\n\n      _addDimensionalPropTween(this, target, vars.y || \"y\", rawPath, \"y\", vars.unitY || \"px\");\n    }\n  },\n  render: function render(ratio, data) {\n    var rawPaths = data.rawPaths,\n        i = rawPaths.length,\n        pt = data._pt;\n\n    if (data.tween._time || !_reverting()) {\n      if (ratio > 1) {\n        ratio = 1;\n      } else if (ratio < 0) {\n        ratio = 0;\n      }\n\n      while (i--) {\n        getPositionOnPath(rawPaths[i], ratio, !i && data.rotate, rawPaths[i]);\n      }\n\n      while (pt) {\n        pt.set(pt.t, pt.p, pt.path[pt.pp] + pt.u, pt.d, ratio);\n        pt = pt._next;\n      }\n\n      data.rotate && data.rSet(data.target, data.rProp, rawPaths[0].angle * (data.radians ? _DEG2RAD : 1) + data.rOffset + data.ru, data, ratio);\n    } else {\n      data.styles.revert();\n    }\n  },\n  getLength: function getLength(path) {\n    return cacheRawPathMeasurements(getRawPath(path)).totalLength;\n  },\n  sliceRawPath: sliceRawPath,\n  getRawPath: getRawPath,\n  pointsToSegment: pointsToSegment,\n  stringToRawPath: stringToRawPath,\n  rawPathToString: rawPathToString,\n  transformRawPath: transformRawPath,\n  getGlobalMatrix: getGlobalMatrix,\n  getPositionOnPath: getPositionOnPath,\n  cacheRawPathMeasurements: cacheRawPathMeasurements,\n  convertToPath: function convertToPath(targets, swap) {\n    return _toArray(targets).map(function (target) {\n      return _convertToPath(target, swap !== false);\n    });\n  },\n  convertCoordinates: function convertCoordinates(fromElement, toElement, point) {\n    var m = getGlobalMatrix(toElement, true, true).multiply(getGlobalMatrix(fromElement));\n    return point ? m.apply(point) : m;\n  },\n  getAlignMatrix: _getAlignMatrix,\n  getRelativePosition: function getRelativePosition(fromElement, toElement, fromOrigin, toOrigin) {\n    var m = _getAlignMatrix(fromElement, toElement, fromOrigin, toOrigin);\n\n    return {\n      x: m.e,\n      y: m.f\n    };\n  },\n  arrayToRawPath: function arrayToRawPath(value, vars) {\n    vars = vars || {};\n\n    var segment = _populateSegmentFromArray(_populateSegmentFromArray([], value, vars.x || \"x\", 0), value, vars.y || \"y\", 1);\n\n    vars.relative && _relativize(segment);\n    return [vars.type === \"cubic\" ? segment : pointsToSegment(segment, vars.curviness)];\n  }\n};\n_getGSAP() && gsap.registerPlugin(MotionPathPlugin);\nexport { MotionPathPlugin as default };"],"mappings":"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"},"metadata":{},"sourceType":"module"}