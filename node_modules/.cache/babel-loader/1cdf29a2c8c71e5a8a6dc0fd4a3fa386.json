{"ast":null,"code":"var _jsxFileName = \"D:\\\\DOANCN\\\\DoAn_CN\\\\my-app\\\\src\\\\components\\\\LayoutConnectDB\\\\Task.js\",\n    _s = $RefreshSig$();\n\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { getOnePost } from \"../Dashboard/postBehavior\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 30px;\n  border: solid 2px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: ${props => props.isDragging ? \"blue\" : \"white\"};\n`;\n_c = Container;\nconst Handle = styled.div`\n  background-image: url(\"https://toppng.com/uploads/preview/drag-ico-11569048140clkfdt3vrw.png\");\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  width: 43px;\n  height: 36px;\n  border-radius: 13px;\n  margin-right: 20px;\n`;\n_c2 = Handle;\n\nconst Task = _ref => {\n  _s();\n\n  let {\n    task,\n    index\n  } = _ref;\n\n  const onclickGetonePostcolor = async task => {\n    const getOneP = await getOnePost(task);\n    return getOneP.posts;\n  };\n\n  let color = onclickGetonePostcolor(task);\n  const [color2, setcolor] = useState({});\n  color.then(function (result) {\n    setcolor(result);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: task,\n      index: index,\n      children: (provider, snapshot) => /*#__PURE__*/_jsxDEV(Container, { ...provider.draggableProps,\n        isDragging: snapshot.isDragging,\n        ref: provider.innerRef,\n        children: [/*#__PURE__*/_jsxDEV(Handle, { ...provider.dragHandleProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Task, \"V0o7QmoF4W0KkVMViBm+A3oYuw8=\");\n\n_c3 = Task;\nexport default Task;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Handle\");\n$RefreshReg$(_c3, \"Task\");","map":{"version":3,"names":["Draggable","styled","getOnePost","useState","Container","div","props","isDragging","Handle","Task","task","index","onclickGetonePostcolor","getOneP","posts","color","color2","setcolor","then","result","provider","snapshot","draggableProps","innerRef","dragHandleProps"],"sources":["D:/DOANCN/DoAn_CN/my-app/src/components/LayoutConnectDB/Task.js"],"sourcesContent":["import { Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { getOnePost } from \"../Dashboard/postBehavior\";\r\nimport { useState } from \"react\";\r\nconst Container = styled.div`\r\n  padding: 30px;\r\n  border: solid 2px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: ${(props) => (props.isDragging ? \"blue\" : \"white\")};\r\n`;\r\nconst Handle = styled.div`\r\n  background-image: url(\"https://toppng.com/uploads/preview/drag-ico-11569048140clkfdt3vrw.png\");\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  width: 43px;\r\n  height: 36px;\r\n  border-radius: 13px;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst Task = ({ task, index }) => {\r\n  const onclickGetonePostcolor = async (task) => {\r\n    const getOneP = await getOnePost(task);\r\n\r\n    return getOneP.posts;\r\n  };\r\n  let color = onclickGetonePostcolor(task);\r\n\r\n  const [color2, setcolor] = useState({});\r\n\r\n  color.then(function (result) {\r\n    setcolor(result);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Draggable draggableId={task} index={index}>\r\n        {(provider, snapshot) => (\r\n          <Container\r\n            {...provider.draggableProps}\r\n            isDragging={snapshot.isDragging}\r\n            ref={provider.innerRef}\r\n          >\r\n            <Handle {...provider.dragHandleProps}></Handle>\r\n            <div>{task}</div>\r\n            {/* <div\r\n              style={{\r\n                backgroundColor: `${color2.color}`,\r\n                width: \"20px\",\r\n                height: \"20px\",\r\n                borderRadius: \"40px\",\r\n                marginLeft: \"10px\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n            </div> */}\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    </>\r\n  );\r\n};\r\nexport default Task;\r\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AACA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,sBAAuBC,KAAD,IAAYA,KAAK,CAACC,UAAN,GAAmB,MAAnB,GAA4B,OAAS;AACvE,CAPA;KAAMH,S;AAQN,MAAMI,MAAM,GAAGP,MAAM,CAACI,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMG,M;;AAWN,MAAMC,IAAI,GAAG,QAAqB;EAAA;;EAAA,IAApB;IAAEC,IAAF;IAAQC;EAAR,CAAoB;;EAChC,MAAMC,sBAAsB,GAAG,MAAOF,IAAP,IAAgB;IAC7C,MAAMG,OAAO,GAAG,MAAMX,UAAU,CAACQ,IAAD,CAAhC;IAEA,OAAOG,OAAO,CAACC,KAAf;EACD,CAJD;;EAKA,IAAIC,KAAK,GAAGH,sBAAsB,CAACF,IAAD,CAAlC;EAEA,MAAM,CAACM,MAAD,EAASC,QAAT,IAAqBd,QAAQ,CAAC,EAAD,CAAnC;EAEAY,KAAK,CAACG,IAAN,CAAW,UAAUC,MAAV,EAAkB;IAC3BF,QAAQ,CAACE,MAAD,CAAR;EACD,CAFD;EAIA,oBACE;IAAA,uBACE,QAAC,SAAD;MAAW,WAAW,EAAET,IAAxB;MAA8B,KAAK,EAAEC,KAArC;MAAA,UACG,CAACS,QAAD,EAAWC,QAAX,kBACC,QAAC,SAAD,OACMD,QAAQ,CAACE,cADf;QAEE,UAAU,EAAED,QAAQ,CAACd,UAFvB;QAGE,GAAG,EAAEa,QAAQ,CAACG,QAHhB;QAAA,wBAKE,QAAC,MAAD,OAAYH,QAAQ,CAACI;QAArB;UAAA;UAAA;UAAA;QAAA,QALF,eAME;UAAA,UAAMd;QAAN;UAAA;UAAA;UAAA;QAAA,QANF;MAAA;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AA2BD,CAzCD;;GAAMD,I;;MAAAA,I;AA0CN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}