{"ast":null,"code":"import axios from \"axios\";\nexport const getPosts = async (req, res) => {\n  const response = await axios.get(\"http://localhost:8080/Post/getAllpost\", {\n    headers: {\n      Authorization: `Bearer ${req}`\n    }\n  });\n\n  if (response.data.success) {}\n\n  return response.data;\n};\nexport const getPostsByMapId = async (req, res) => {\n  const response = await axios.get(`http://localhost:8080/Post/GetPostsOfUserByMapid/${req}`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return response.data;\n}; // http://localhost:8080/Map/636a5e1faa9c6130f9788553 get one map by _id\n\nexport const getByMapId = async (req, res) => {\n  const response = await axios.get(`http://localhost:8080/Post/GetPostsOfUserByMapid/${req}`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return response.data;\n};\nexport const createnewPost = async (req, res) => {\n  const response = await axios.post(\"http://localhost:8080/Post/\", req, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return response;\n};\nexport const DeletedPost = async (req, res) => {\n  const response = await axios.delete(`http://localhost:8080/Post/${req}`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return response.data;\n};\n_c = DeletedPost;\nexport const getOnePost = async (req, res) => {\n  const response = await axios.post(`http://localhost:8080/Post/getOnePost/${req}`, {\n    params: {\n      _id: `${req}`\n    }\n  }, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return response.data;\n};\nexport const EditPost = async (req, res) => {\n  const response = await axios.put(`http://localhost:8080/Post/${req._id}`, req, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return response;\n}; //init columns\n\n_c2 = EditPost;\nexport const initColumns = async (req, res) => {\n  const response = await axios.post(`http://localhost:8080/columns`, req, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return response;\n}; //update columns\n\nexport const updateColumns = async (req, res) => {\n  const response = await axios.put(`http://localhost:8080/columns/${req._id}`, req, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return response;\n}; //getAll Columns\n\nexport const getAllColumns = async (req, res) => {\n  const response = await axios.get(`http://localhost:8080/columns`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return response;\n}; //getAll Columns by map id\n\nexport const getColumnsByMapId = async (req, res) => {\n  const response = await axios.get(`http://localhost:8080/columns/${req}`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return response.data;\n}; //Deleted Columns\n\nexport const DeletedColumns_ByID = async (req, res) => {\n  const response = await axios.delete(`http://localhost:8080/columns/${req}`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return response;\n}; //get one column by id body\n\n_c3 = DeletedColumns_ByID;\nexport const getOneColumsByidBody = async (req, res) => {\n  const response = await axios.post(\"http://localhost:8080/columns/getIdinit\", req, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return response.data;\n}; //init columnOrder\n\nexport const initColumnOrder = async (req, res) => {\n  const response = await axios.post(`http://localhost:8080/columnorder`, req, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return response;\n};\nexport const getAllColumnOrder = async (req, res) => {\n  const response = await axios.get(`http://localhost:8080/columnorder`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return response;\n}; //Update ColumnOrder http://localhost:8080/columnorder/\n\nexport const updateColumnOrder = async (req, res) => {\n  const response = await axios.put(`http://localhost:8080/columnorder/${req._id}`, req, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return response;\n};\nexport const getOneColums = async (req, res) => {\n  const response = await axios.post(`http://localhost:8080/columns/${req}`, {\n    params: {\n      _id: `${req}`\n    }\n  }, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return response.data;\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DeletedPost\");\n$RefreshReg$(_c2, \"EditPost\");\n$RefreshReg$(_c3, \"DeletedColumns_ByID\");","map":{"version":3,"names":["axios","getPosts","req","res","response","get","headers","Authorization","data","success","getPostsByMapId","localStorage","getItem","getByMapId","createnewPost","post","DeletedPost","delete","getOnePost","params","_id","EditPost","put","initColumns","updateColumns","getAllColumns","getColumnsByMapId","DeletedColumns_ByID","getOneColumsByidBody","initColumnOrder","getAllColumnOrder","updateColumnOrder","getOneColums"],"sources":["D:/DOANCN/DoAn_CN/my-app/src/components/Dashboard/postBehavior.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getPosts = async (req, res) => {\r\n  const response = await axios.get(\"http://localhost:8080/Post/getAllpost\", {\r\n    headers: { Authorization: `Bearer ${req}` },\r\n  });\r\n  if (response.data.success) {\r\n  }\r\n  return response.data;\r\n};\r\n\r\nexport const getPostsByMapId = async (req, res) => {\r\n  const response = await axios.get(\r\n    `http://localhost:8080/Post/GetPostsOfUserByMapid/${req}`,\r\n    {\r\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// http://localhost:8080/Map/636a5e1faa9c6130f9788553 get one map by _id\r\nexport const getByMapId = async (req, res) => {\r\n  const response = await axios.get(\r\n    `http://localhost:8080/Post/GetPostsOfUserByMapid/${req}`,\r\n    {\r\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\nexport const createnewPost = async (req, res) => {\r\n  const response = await axios.post(\"http://localhost:8080/Post/\", req, {\r\n    headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n  });\r\n\r\n  return response;\r\n};\r\n\r\nexport const DeletedPost = async (req, res) => {\r\n  const response = await axios.delete(`http://localhost:8080/Post/${req}`, {\r\n    headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const getOnePost = async (req, res) => {\r\n  const response = await axios.post(\r\n    `http://localhost:8080/Post/getOnePost/${req}`,\r\n    {\r\n      params: {\r\n        _id: `${req}`,\r\n      },\r\n    },\r\n    {\r\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const EditPost = async (req, res) => {\r\n  const response = await axios.put(\r\n    `http://localhost:8080/Post/${req._id}`,\r\n    req,\r\n    {\r\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n    }\r\n  );\r\n  return response;\r\n};\r\n\r\n//init columns\r\n\r\nexport const initColumns = async (req, res) => {\r\n  const response = await axios.post(`http://localhost:8080/columns`, req, {\r\n    headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n  });\r\n  return response;\r\n};\r\n\r\n//update columns\r\nexport const updateColumns = async (req, res) => {\r\n  const response = await axios.put(\r\n    `http://localhost:8080/columns/${req._id}`,\r\n    req,\r\n    {\r\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n    }\r\n  );\r\n  return response;\r\n};\r\n//getAll Columns\r\nexport const getAllColumns = async (req, res) => {\r\n  const response = await axios.get(`http://localhost:8080/columns`, {\r\n    headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n  });\r\n  return response;\r\n};\r\n//getAll Columns by map id\r\nexport const getColumnsByMapId = async (req, res) => {\r\n  const response = await axios.get(\r\n    `http://localhost:8080/columns/${req}`,\r\n    {\r\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n//Deleted Columns\r\nexport const DeletedColumns_ByID = async (req, res) => {\r\n  const response = await axios.delete(`http://localhost:8080/columns/${req}`, {\r\n    headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n  });\r\n  return response;\r\n};\r\n//get one column by id body\r\nexport const getOneColumsByidBody = async (req, res) => {\r\n  const response = await axios.post(\r\n    \"http://localhost:8080/columns/getIdinit\",\r\n    req,\r\n    {\r\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\n//init columnOrder\r\n\r\nexport const initColumnOrder = async (req, res) => {\r\n  const response = await axios.post(`http://localhost:8080/columnorder`, req, {\r\n    headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n  });\r\n  return response;\r\n};\r\n\r\nexport const getAllColumnOrder = async (req, res) => {\r\n  const response = await axios.get(`http://localhost:8080/columnorder`, {\r\n    headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n  });\r\n  return response;\r\n};\r\n//Update ColumnOrder http://localhost:8080/columnorder/\r\nexport const updateColumnOrder = async (req, res) => {\r\n  const response = await axios.put(\r\n    `http://localhost:8080/columnorder/${req._id}`,\r\n    req,\r\n    {\r\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n    }\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getOneColums = async (req, res) => {\r\n  const response = await axios.post(\r\n    `http://localhost:8080/columns/${req}`,\r\n    {\r\n      params: {\r\n        _id: `${req}`,\r\n      },\r\n    },\r\n    {\r\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}