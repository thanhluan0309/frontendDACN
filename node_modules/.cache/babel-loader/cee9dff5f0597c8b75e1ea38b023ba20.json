{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { RegisterUser } from \"./UserBehavior\";\nimport ErrorBox from \"./Errorbox\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [showErrorBox, setShowErrorBox] = useState(false);\n  let nav = useNavigate();\n  const [formRegister, changeRegister] = useState({\n    username: \"\",\n    password: \"\",\n    repassword: \"\"\n  });\n\n  const handleRegister = event => {\n    changeRegister({ ...formRegister,\n      [event.target.name]: event.target.value\n    });\n    setShowErrorBox(false);\n  };\n\n  const register = async () => {\n    try {\n      const registerUser = await RegisterUser(formRegister);\n\n      if (registerUser.success) {\n        return nav(\"/login\");\n      }\n    } catch (error) {\n      setShowErrorBox(true);\n      console.log(error.response);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Register, \"g90fodVcmu1jdzkrgNAPoyzZrCA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Button","Form","useNavigate","Link","useState","RegisterUser","ErrorBox","Register","showErrorBox","setShowErrorBox","nav","formRegister","changeRegister","username","password","repassword","handleRegister","event","target","name","value","register","registerUser","success","error","console","log","response"],"sources":["D:/ReactJS/DoAn_CN/my-app/src/components/Login/Register.js"],"sourcesContent":["import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { RegisterUser } from \"./UserBehavior\";\r\nimport ErrorBox from \"./Errorbox\";\r\nconst Register = () => {\r\n  const [showErrorBox, setShowErrorBox] = useState(false);\r\n  let nav = useNavigate();\r\n  const [formRegister, changeRegister] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    repassword: \"\",\r\n  });\r\n  const handleRegister = (event) => {\r\n    changeRegister({\r\n      ...formRegister,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    setShowErrorBox(false);\r\n  };\r\n  const register = async () => {\r\n    try {\r\n      const registerUser = await RegisterUser(formRegister);\r\n      if (registerUser.success) {\r\n        return nav(\"/login\");\r\n      }\r\n    } catch (error) {\r\n      setShowErrorBox(true);\r\n      console.log(error.response);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {/* <h1>Register</h1>\r\n      <ErrorBox messageError={\"Thong tin sai\"} showErrorBox={showErrorBox} />\r\n      <Form onSubmit={register}>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>username</Form.Label>\r\n          <Form.Control\r\n            name=\"username\"\r\n            onChange={handleRegister}\r\n            value={formRegister.username}\r\n            type=\"text\"\r\n            placeholder=\"Enter email\"\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            name=\"password\"\r\n            onChange={handleRegister}\r\n            value={formRegister.password}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Re-Password</Form.Label>\r\n          <Form.Control\r\n            name=\"repassword\"\r\n            onChange={handleRegister}\r\n            value={formRegister.repassword}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n          <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n        </Form.Group>\r\n        <Link to=\"/login\">\r\n          <Button>register</Button>\r\n        </Link>\r\n        <Button onClick={register}>Submit</Button>\r\n      </Form> */}\r\n    </>\r\n  );\r\n};\r\nexport default Register;\r\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,kBAAlC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AACA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,KAAD,CAAhD;EACA,IAAIM,GAAG,GAAGR,WAAW,EAArB;EACA,MAAM,CAACS,YAAD,EAAeC,cAAf,IAAiCR,QAAQ,CAAC;IAC9CS,QAAQ,EAAE,EADoC;IAE9CC,QAAQ,EAAE,EAFoC;IAG9CC,UAAU,EAAE;EAHkC,CAAD,CAA/C;;EAKA,MAAMC,cAAc,GAAIC,KAAD,IAAW;IAChCL,cAAc,CAAC,EACb,GAAGD,YADU;MAEb,CAACM,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;IAFrB,CAAD,CAAd;IAIAX,eAAe,CAAC,KAAD,CAAf;EACD,CAND;;EAOA,MAAMY,QAAQ,GAAG,YAAY;IAC3B,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMjB,YAAY,CAACM,YAAD,CAAvC;;MACA,IAAIW,YAAY,CAACC,OAAjB,EAA0B;QACxB,OAAOb,GAAG,CAAC,QAAD,CAAV;MACD;IACF,CALD,CAKE,OAAOc,KAAP,EAAc;MACdf,eAAe,CAAC,IAAD,CAAf;MACAgB,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;IACD;EACF,CAVD;;EAWA,oBACE,qCADF;AAmDD,CA7ED;;GAAMpB,Q;UAEML,W;;;KAFNK,Q;AA8EN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}