{"ast":null,"code":"'use strict';\n\nconst EventEmitter = require('events');\n\nconst shared = require('../shared');\n\nconst mimeTypes = require('../mime-funcs/mime-types');\n\nconst MailComposer = require('../mail-composer');\n\nconst DKIM = require('../dkim');\n\nconst httpProxyClient = require('../smtp-connection/http-proxy-client');\n\nconst util = require('util');\n\nconst urllib = require('url');\n\nconst packageData = require('../../package.json');\n\nconst MailMessage = require('./mail-message');\n\nconst net = require('net');\n\nconst dns = require('dns');\n\nconst crypto = require('crypto');\n/**\n * Creates an object for exposing the Mail API\n *\n * @constructor\n * @param {Object} transporter Transport object instance to pass the mails to\n */\n\n\nclass Mail extends EventEmitter {\n  constructor(transporter, options, defaults) {\n    var _this;\n\n    super();\n    _this = this;\n    this.options = options || {};\n    this._defaults = defaults || {};\n    this._defaultPlugins = {\n      compile: [function () {\n        return _this._convertDataImages(...arguments);\n      }],\n      stream: []\n    };\n    this._userPlugins = {\n      compile: [],\n      stream: []\n    };\n    this.meta = new Map();\n    this.dkim = this.options.dkim ? new DKIM(this.options.dkim) : false;\n    this.transporter = transporter;\n    this.transporter.mailer = this;\n    this.logger = shared.getLogger(this.options, {\n      component: this.options.component || 'mail'\n    });\n    this.logger.debug({\n      tnx: 'create'\n    }, 'Creating transport: %s', this.getVersionString()); // setup emit handlers for the transporter\n\n    if (typeof this.transporter.on === 'function') {\n      // deprecated log interface\n      this.transporter.on('log', log => {\n        this.logger.debug({\n          tnx: 'transport'\n        }, '%s: %s', log.type, log.message);\n      }); // transporter errors\n\n      this.transporter.on('error', err => {\n        this.logger.error({\n          err,\n          tnx: 'transport'\n        }, 'Transport Error: %s', err.message);\n        this.emit('error', err);\n      }); // indicates if the sender has became idle\n\n      this.transporter.on('idle', function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this.emit('idle', ...args);\n      });\n    }\n    /**\n     * Optional methods passed to the underlying transport object\n     */\n\n\n    ['close', 'isIdle', 'verify'].forEach(method => {\n      this[method] = function () {\n        if (typeof _this.transporter[method] === 'function') {\n          if (method === 'verify' && typeof _this.getSocket === 'function') {\n            _this.transporter.getSocket = _this.getSocket;\n            _this.getSocket = false;\n          }\n\n          return _this.transporter[method](...arguments);\n        } else {\n          _this.logger.warn({\n            tnx: 'transport',\n            methodName: method\n          }, 'Non existing method %s called for transport', method);\n\n          return false;\n        }\n      };\n    }); // setup proxy handling\n\n    if (this.options.proxy && typeof this.options.proxy === 'string') {\n      this.setupProxy(this.options.proxy);\n    }\n  }\n\n  use(step, plugin) {\n    step = (step || '').toString();\n\n    if (!this._userPlugins.hasOwnProperty(step)) {\n      this._userPlugins[step] = [plugin];\n    } else {\n      this._userPlugins[step].push(plugin);\n    }\n\n    return this;\n  }\n  /**\n   * Sends an email using the preselected transport object\n   *\n   * @param {Object} data E-data description\n   * @param {Function?} callback Callback to run once the sending succeeded or failed\n   */\n\n\n  sendMail(data, callback) {\n    var _this2 = this;\n\n    let promise;\n\n    if (!callback) {\n      promise = new Promise((resolve, reject) => {\n        callback = shared.callbackPromise(resolve, reject);\n      });\n    }\n\n    if (typeof this.getSocket === 'function') {\n      this.transporter.getSocket = this.getSocket;\n      this.getSocket = false;\n    }\n\n    let mail = new MailMessage(this, data);\n    this.logger.debug({\n      tnx: 'transport',\n      name: this.transporter.name,\n      version: this.transporter.version,\n      action: 'send'\n    }, 'Sending mail using %s/%s', this.transporter.name, this.transporter.version);\n\n    this._processPlugins('compile', mail, err => {\n      if (err) {\n        this.logger.error({\n          err,\n          tnx: 'plugin',\n          action: 'compile'\n        }, 'PluginCompile Error: %s', err.message);\n        return callback(err);\n      }\n\n      mail.message = new MailComposer(mail.data).compile();\n      mail.setMailerHeader();\n      mail.setPriorityHeaders();\n      mail.setListHeaders();\n\n      this._processPlugins('stream', mail, err => {\n        if (err) {\n          this.logger.error({\n            err,\n            tnx: 'plugin',\n            action: 'stream'\n          }, 'PluginStream Error: %s', err.message);\n          return callback(err);\n        }\n\n        if (mail.data.dkim || this.dkim) {\n          mail.message.processFunc(input => {\n            let dkim = mail.data.dkim ? new DKIM(mail.data.dkim) : this.dkim;\n            this.logger.debug({\n              tnx: 'DKIM',\n              messageId: mail.message.messageId(),\n              dkimDomains: dkim.keys.map(key => key.keySelector + '.' + key.domainName).join(', ')\n            }, 'Signing outgoing message with %s keys', dkim.keys.length);\n            return dkim.sign(input, mail.data._dkim);\n          });\n        }\n\n        this.transporter.send(mail, function () {\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          if (args[0]) {\n            _this2.logger.error({\n              err: args[0],\n              tnx: 'transport',\n              action: 'send'\n            }, 'Send Error: %s', args[0].message);\n          }\n\n          callback(...args);\n        });\n      });\n    });\n\n    return promise;\n  }\n\n  getVersionString() {\n    return util.format('%s (%s; +%s; %s/%s)', packageData.name, packageData.version, packageData.homepage, this.transporter.name, this.transporter.version);\n  }\n\n  _processPlugins(step, mail, callback) {\n    step = (step || '').toString();\n\n    if (!this._userPlugins.hasOwnProperty(step)) {\n      return callback();\n    }\n\n    let userPlugins = this._userPlugins[step] || [];\n    let defaultPlugins = this._defaultPlugins[step] || [];\n\n    if (userPlugins.length) {\n      this.logger.debug({\n        tnx: 'transaction',\n        pluginCount: userPlugins.length,\n        step\n      }, 'Using %s plugins for %s', userPlugins.length, step);\n    }\n\n    if (userPlugins.length + defaultPlugins.length === 0) {\n      return callback();\n    }\n\n    let pos = 0;\n    let block = 'default';\n\n    let processPlugins = () => {\n      let curplugins = block === 'default' ? defaultPlugins : userPlugins;\n\n      if (pos >= curplugins.length) {\n        if (block === 'default' && userPlugins.length) {\n          block = 'user';\n          pos = 0;\n          curplugins = userPlugins;\n        } else {\n          return callback();\n        }\n      }\n\n      let plugin = curplugins[pos++];\n      plugin(mail, err => {\n        if (err) {\n          return callback(err);\n        }\n\n        processPlugins();\n      });\n    };\n\n    processPlugins();\n  }\n  /**\n   * Sets up proxy handler for a Nodemailer object\n   *\n   * @param {String} proxyUrl Proxy configuration url\n   */\n\n\n  setupProxy(proxyUrl) {\n    let proxy = urllib.parse(proxyUrl); // setup socket handler for the mailer object\n\n    this.getSocket = (options, callback) => {\n      let protocol = proxy.protocol.replace(/:$/, '').toLowerCase();\n\n      if (this.meta.has('proxy_handler_' + protocol)) {\n        return this.meta.get('proxy_handler_' + protocol)(proxy, options, callback);\n      }\n\n      switch (protocol) {\n        // Connect using a HTTP CONNECT method\n        case 'http':\n        case 'https':\n          httpProxyClient(proxy.href, options.port, options.host, (err, socket) => {\n            if (err) {\n              return callback(err);\n            }\n\n            return callback(null, {\n              connection: socket\n            });\n          });\n          return;\n\n        case 'socks':\n        case 'socks5':\n        case 'socks4':\n        case 'socks4a':\n          {\n            if (!this.meta.has('proxy_socks_module')) {\n              return callback(new Error('Socks module not loaded'));\n            }\n\n            let connect = ipaddress => {\n              let proxyV2 = !!this.meta.get('proxy_socks_module').SocksClient;\n              let socksClient = proxyV2 ? this.meta.get('proxy_socks_module').SocksClient : this.meta.get('proxy_socks_module');\n              let proxyType = Number(proxy.protocol.replace(/\\D/g, '')) || 5;\n              let connectionOpts = {\n                proxy: {\n                  ipaddress,\n                  port: Number(proxy.port),\n                  type: proxyType\n                },\n                [proxyV2 ? 'destination' : 'target']: {\n                  host: options.host,\n                  port: options.port\n                },\n                command: 'connect'\n              };\n\n              if (proxy.auth) {\n                let username = decodeURIComponent(proxy.auth.split(':').shift());\n                let password = decodeURIComponent(proxy.auth.split(':').pop());\n\n                if (proxyV2) {\n                  connectionOpts.proxy.userId = username;\n                  connectionOpts.proxy.password = password;\n                } else if (proxyType === 4) {\n                  connectionOpts.userid = username;\n                } else {\n                  connectionOpts.authentication = {\n                    username,\n                    password\n                  };\n                }\n              }\n\n              socksClient.createConnection(connectionOpts, (err, info) => {\n                if (err) {\n                  return callback(err);\n                }\n\n                return callback(null, {\n                  connection: info.socket || info\n                });\n              });\n            };\n\n            if (net.isIP(proxy.hostname)) {\n              return connect(proxy.hostname);\n            }\n\n            return dns.resolve(proxy.hostname, (err, address) => {\n              if (err) {\n                return callback(err);\n              }\n\n              connect(Array.isArray(address) ? address[0] : address);\n            });\n          }\n      }\n\n      callback(new Error('Unknown proxy configuration'));\n    };\n  }\n\n  _convertDataImages(mail, callback) {\n    if (!this.options.attachDataUrls && !mail.data.attachDataUrls || !mail.data.html) {\n      return callback();\n    }\n\n    mail.resolveContent(mail.data, 'html', (err, html) => {\n      if (err) {\n        return callback(err);\n      }\n\n      let cidCounter = 0;\n      html = (html || '').toString().replace(/(<img\\b[^>]* src\\s*=[\\s\"']*)(data:([^;]+);[^\"'>\\s]+)/gi, (match, prefix, dataUri, mimeType) => {\n        let cid = crypto.randomBytes(10).toString('hex') + '@localhost';\n\n        if (!mail.data.attachments) {\n          mail.data.attachments = [];\n        }\n\n        if (!Array.isArray(mail.data.attachments)) {\n          mail.data.attachments = [].concat(mail.data.attachments || []);\n        }\n\n        mail.data.attachments.push({\n          path: dataUri,\n          cid,\n          filename: 'image-' + ++cidCounter + '.' + mimeTypes.detectExtension(mimeType)\n        });\n        return prefix + 'cid:' + cid;\n      });\n      mail.data.html = html;\n      callback();\n    });\n  }\n\n  set(key, value) {\n    return this.meta.set(key, value);\n  }\n\n  get(key) {\n    return this.meta.get(key);\n  }\n\n}\n\nmodule.exports = Mail;","map":{"version":3,"names":["EventEmitter","require","shared","mimeTypes","MailComposer","DKIM","httpProxyClient","util","urllib","packageData","MailMessage","net","dns","crypto","Mail","constructor","transporter","options","defaults","_defaults","_defaultPlugins","compile","_convertDataImages","stream","_userPlugins","meta","Map","dkim","mailer","logger","getLogger","component","debug","tnx","getVersionString","on","log","type","message","err","error","emit","args","forEach","method","getSocket","warn","methodName","proxy","setupProxy","use","step","plugin","toString","hasOwnProperty","push","sendMail","data","callback","promise","Promise","resolve","reject","callbackPromise","mail","name","version","action","_processPlugins","setMailerHeader","setPriorityHeaders","setListHeaders","processFunc","input","messageId","dkimDomains","keys","map","key","keySelector","domainName","join","length","sign","_dkim","send","format","homepage","userPlugins","defaultPlugins","pluginCount","pos","block","processPlugins","curplugins","proxyUrl","parse","protocol","replace","toLowerCase","has","get","href","port","host","socket","connection","Error","connect","ipaddress","proxyV2","SocksClient","socksClient","proxyType","Number","connectionOpts","command","auth","username","decodeURIComponent","split","shift","password","pop","userId","userid","authentication","createConnection","info","isIP","hostname","address","Array","isArray","attachDataUrls","html","resolveContent","cidCounter","match","prefix","dataUri","mimeType","cid","randomBytes","attachments","concat","path","filename","detectExtension","set","value","module","exports"],"sources":["D:/ReactJS/DoAn_CN/my-app/node_modules/nodemailer/lib/mailer/index.js"],"sourcesContent":["'use strict';\n\nconst EventEmitter = require('events');\nconst shared = require('../shared');\nconst mimeTypes = require('../mime-funcs/mime-types');\nconst MailComposer = require('../mail-composer');\nconst DKIM = require('../dkim');\nconst httpProxyClient = require('../smtp-connection/http-proxy-client');\nconst util = require('util');\nconst urllib = require('url');\nconst packageData = require('../../package.json');\nconst MailMessage = require('./mail-message');\nconst net = require('net');\nconst dns = require('dns');\nconst crypto = require('crypto');\n\n/**\n * Creates an object for exposing the Mail API\n *\n * @constructor\n * @param {Object} transporter Transport object instance to pass the mails to\n */\nclass Mail extends EventEmitter {\n    constructor(transporter, options, defaults) {\n        super();\n\n        this.options = options || {};\n        this._defaults = defaults || {};\n\n        this._defaultPlugins = {\n            compile: [(...args) => this._convertDataImages(...args)],\n            stream: []\n        };\n\n        this._userPlugins = {\n            compile: [],\n            stream: []\n        };\n\n        this.meta = new Map();\n\n        this.dkim = this.options.dkim ? new DKIM(this.options.dkim) : false;\n\n        this.transporter = transporter;\n        this.transporter.mailer = this;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'mail'\n        });\n\n        this.logger.debug(\n            {\n                tnx: 'create'\n            },\n            'Creating transport: %s',\n            this.getVersionString()\n        );\n\n        // setup emit handlers for the transporter\n        if (typeof this.transporter.on === 'function') {\n            // deprecated log interface\n            this.transporter.on('log', log => {\n                this.logger.debug(\n                    {\n                        tnx: 'transport'\n                    },\n                    '%s: %s',\n                    log.type,\n                    log.message\n                );\n            });\n\n            // transporter errors\n            this.transporter.on('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'transport'\n                    },\n                    'Transport Error: %s',\n                    err.message\n                );\n                this.emit('error', err);\n            });\n\n            // indicates if the sender has became idle\n            this.transporter.on('idle', (...args) => {\n                this.emit('idle', ...args);\n            });\n        }\n\n        /**\n         * Optional methods passed to the underlying transport object\n         */\n        ['close', 'isIdle', 'verify'].forEach(method => {\n            this[method] = (...args) => {\n                if (typeof this.transporter[method] === 'function') {\n                    if (method === 'verify' && typeof this.getSocket === 'function') {\n                        this.transporter.getSocket = this.getSocket;\n                        this.getSocket = false;\n                    }\n                    return this.transporter[method](...args);\n                } else {\n                    this.logger.warn(\n                        {\n                            tnx: 'transport',\n                            methodName: method\n                        },\n                        'Non existing method %s called for transport',\n                        method\n                    );\n                    return false;\n                }\n            };\n        });\n\n        // setup proxy handling\n        if (this.options.proxy && typeof this.options.proxy === 'string') {\n            this.setupProxy(this.options.proxy);\n        }\n    }\n\n    use(step, plugin) {\n        step = (step || '').toString();\n        if (!this._userPlugins.hasOwnProperty(step)) {\n            this._userPlugins[step] = [plugin];\n        } else {\n            this._userPlugins[step].push(plugin);\n        }\n\n        return this;\n    }\n\n    /**\n     * Sends an email using the preselected transport object\n     *\n     * @param {Object} data E-data description\n     * @param {Function?} callback Callback to run once the sending succeeded or failed\n     */\n    sendMail(data, callback) {\n        let promise;\n\n        if (!callback) {\n            promise = new Promise((resolve, reject) => {\n                callback = shared.callbackPromise(resolve, reject);\n            });\n        }\n\n        if (typeof this.getSocket === 'function') {\n            this.transporter.getSocket = this.getSocket;\n            this.getSocket = false;\n        }\n\n        let mail = new MailMessage(this, data);\n\n        this.logger.debug(\n            {\n                tnx: 'transport',\n                name: this.transporter.name,\n                version: this.transporter.version,\n                action: 'send'\n            },\n            'Sending mail using %s/%s',\n            this.transporter.name,\n            this.transporter.version\n        );\n\n        this._processPlugins('compile', mail, err => {\n            if (err) {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'plugin',\n                        action: 'compile'\n                    },\n                    'PluginCompile Error: %s',\n                    err.message\n                );\n                return callback(err);\n            }\n\n            mail.message = new MailComposer(mail.data).compile();\n\n            mail.setMailerHeader();\n            mail.setPriorityHeaders();\n            mail.setListHeaders();\n\n            this._processPlugins('stream', mail, err => {\n                if (err) {\n                    this.logger.error(\n                        {\n                            err,\n                            tnx: 'plugin',\n                            action: 'stream'\n                        },\n                        'PluginStream Error: %s',\n                        err.message\n                    );\n                    return callback(err);\n                }\n\n                if (mail.data.dkim || this.dkim) {\n                    mail.message.processFunc(input => {\n                        let dkim = mail.data.dkim ? new DKIM(mail.data.dkim) : this.dkim;\n                        this.logger.debug(\n                            {\n                                tnx: 'DKIM',\n                                messageId: mail.message.messageId(),\n                                dkimDomains: dkim.keys.map(key => key.keySelector + '.' + key.domainName).join(', ')\n                            },\n                            'Signing outgoing message with %s keys',\n                            dkim.keys.length\n                        );\n                        return dkim.sign(input, mail.data._dkim);\n                    });\n                }\n\n                this.transporter.send(mail, (...args) => {\n                    if (args[0]) {\n                        this.logger.error(\n                            {\n                                err: args[0],\n                                tnx: 'transport',\n                                action: 'send'\n                            },\n                            'Send Error: %s',\n                            args[0].message\n                        );\n                    }\n                    callback(...args);\n                });\n            });\n        });\n\n        return promise;\n    }\n\n    getVersionString() {\n        return util.format('%s (%s; +%s; %s/%s)', packageData.name, packageData.version, packageData.homepage, this.transporter.name, this.transporter.version);\n    }\n\n    _processPlugins(step, mail, callback) {\n        step = (step || '').toString();\n\n        if (!this._userPlugins.hasOwnProperty(step)) {\n            return callback();\n        }\n\n        let userPlugins = this._userPlugins[step] || [];\n        let defaultPlugins = this._defaultPlugins[step] || [];\n\n        if (userPlugins.length) {\n            this.logger.debug(\n                {\n                    tnx: 'transaction',\n                    pluginCount: userPlugins.length,\n                    step\n                },\n                'Using %s plugins for %s',\n                userPlugins.length,\n                step\n            );\n        }\n\n        if (userPlugins.length + defaultPlugins.length === 0) {\n            return callback();\n        }\n\n        let pos = 0;\n        let block = 'default';\n        let processPlugins = () => {\n            let curplugins = block === 'default' ? defaultPlugins : userPlugins;\n            if (pos >= curplugins.length) {\n                if (block === 'default' && userPlugins.length) {\n                    block = 'user';\n                    pos = 0;\n                    curplugins = userPlugins;\n                } else {\n                    return callback();\n                }\n            }\n            let plugin = curplugins[pos++];\n            plugin(mail, err => {\n                if (err) {\n                    return callback(err);\n                }\n                processPlugins();\n            });\n        };\n\n        processPlugins();\n    }\n\n    /**\n     * Sets up proxy handler for a Nodemailer object\n     *\n     * @param {String} proxyUrl Proxy configuration url\n     */\n    setupProxy(proxyUrl) {\n        let proxy = urllib.parse(proxyUrl);\n\n        // setup socket handler for the mailer object\n        this.getSocket = (options, callback) => {\n            let protocol = proxy.protocol.replace(/:$/, '').toLowerCase();\n\n            if (this.meta.has('proxy_handler_' + protocol)) {\n                return this.meta.get('proxy_handler_' + protocol)(proxy, options, callback);\n            }\n\n            switch (protocol) {\n                // Connect using a HTTP CONNECT method\n                case 'http':\n                case 'https':\n                    httpProxyClient(proxy.href, options.port, options.host, (err, socket) => {\n                        if (err) {\n                            return callback(err);\n                        }\n                        return callback(null, {\n                            connection: socket\n                        });\n                    });\n                    return;\n                case 'socks':\n                case 'socks5':\n                case 'socks4':\n                case 'socks4a': {\n                    if (!this.meta.has('proxy_socks_module')) {\n                        return callback(new Error('Socks module not loaded'));\n                    }\n                    let connect = ipaddress => {\n                        let proxyV2 = !!this.meta.get('proxy_socks_module').SocksClient;\n                        let socksClient = proxyV2 ? this.meta.get('proxy_socks_module').SocksClient : this.meta.get('proxy_socks_module');\n                        let proxyType = Number(proxy.protocol.replace(/\\D/g, '')) || 5;\n                        let connectionOpts = {\n                            proxy: {\n                                ipaddress,\n                                port: Number(proxy.port),\n                                type: proxyType\n                            },\n                            [proxyV2 ? 'destination' : 'target']: {\n                                host: options.host,\n                                port: options.port\n                            },\n                            command: 'connect'\n                        };\n\n                        if (proxy.auth) {\n                            let username = decodeURIComponent(proxy.auth.split(':').shift());\n                            let password = decodeURIComponent(proxy.auth.split(':').pop());\n                            if (proxyV2) {\n                                connectionOpts.proxy.userId = username;\n                                connectionOpts.proxy.password = password;\n                            } else if (proxyType === 4) {\n                                connectionOpts.userid = username;\n                            } else {\n                                connectionOpts.authentication = {\n                                    username,\n                                    password\n                                };\n                            }\n                        }\n\n                        socksClient.createConnection(connectionOpts, (err, info) => {\n                            if (err) {\n                                return callback(err);\n                            }\n                            return callback(null, {\n                                connection: info.socket || info\n                            });\n                        });\n                    };\n\n                    if (net.isIP(proxy.hostname)) {\n                        return connect(proxy.hostname);\n                    }\n\n                    return dns.resolve(proxy.hostname, (err, address) => {\n                        if (err) {\n                            return callback(err);\n                        }\n                        connect(Array.isArray(address) ? address[0] : address);\n                    });\n                }\n            }\n            callback(new Error('Unknown proxy configuration'));\n        };\n    }\n\n    _convertDataImages(mail, callback) {\n        if ((!this.options.attachDataUrls && !mail.data.attachDataUrls) || !mail.data.html) {\n            return callback();\n        }\n        mail.resolveContent(mail.data, 'html', (err, html) => {\n            if (err) {\n                return callback(err);\n            }\n            let cidCounter = 0;\n            html = (html || '').toString().replace(/(<img\\b[^>]* src\\s*=[\\s\"']*)(data:([^;]+);[^\"'>\\s]+)/gi, (match, prefix, dataUri, mimeType) => {\n                let cid = crypto.randomBytes(10).toString('hex') + '@localhost';\n                if (!mail.data.attachments) {\n                    mail.data.attachments = [];\n                }\n                if (!Array.isArray(mail.data.attachments)) {\n                    mail.data.attachments = [].concat(mail.data.attachments || []);\n                }\n                mail.data.attachments.push({\n                    path: dataUri,\n                    cid,\n                    filename: 'image-' + ++cidCounter + '.' + mimeTypes.detectExtension(mimeType)\n                });\n                return prefix + 'cid:' + cid;\n            });\n            mail.data.html = html;\n            callback();\n        });\n    }\n\n    set(key, value) {\n        return this.meta.set(key, value);\n    }\n\n    get(key) {\n        return this.meta.get(key);\n    }\n}\n\nmodule.exports = Mail;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}