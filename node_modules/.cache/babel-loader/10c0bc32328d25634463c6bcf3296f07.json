{"ast":null,"code":"var _jsxFileName = \"D:\\\\Deploy\\\\frontendDACN\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { Navbar } from \"../Layout/Navbar\";\nimport { Map } from \"../Layout/Caroucel\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport React from \"react\";\nimport { NotificationContainer } from \"react-notifications\";\nimport { createNotification } from \"../Notifications/notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport { getPosts, getPostsByMapId, createnewPost, DeletedPost, getOnePost, EditPost, getOneMapby_Id, updateMap } from \"./postBehavior\";\nimport { udlus } from \"../Login/UserBehavior\";\nimport { CheckLoginUser } from \"../Login/UserBehavior\";\nimport ReactTooltip from \"react-tooltip\";\nimport { ModalEdit, ModalAddpost } from \"./handleDash\";\nimport { FormSendMail } from \"../SendEmail/Sendmail\";\nimport { decodeToken } from \"react-jwt\";\nimport \"./style.css\";\nimport * as Icon from \"react-bootstrap-icons\";\nimport { linear } from \"eases\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Dashboard = () => {\n  _s();\n\n  const [Post, setPost] = useState();\n  const [Map, setMap] = useState([]);\n  const [istrue, setistrue] = useState(true);\n  const [formupdatecolor, setformupdatecolor] = useState({\n    NameColor: \"\"\n  });\n\n  const onhandlechangecolor = event => {\n    setformupdatecolor({ ...formupdatecolor,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const Submitcolor = async e => {\n    let color = Map;\n    color.push(formupdatecolor);\n    await updateMap(color);\n    setistrue(true);\n  };\n\n  let myDecodedToken = decodeToken(localStorage.getItem(\"CodeShare\"));\n  let nav = useNavigate();\n  const [createPost, setCreatePost] = useState({\n    title: \"\",\n    Des: \"\",\n    Url: \"\",\n    Behavior: \"Learning\",\n    color: \"#ffa500\",\n    user: localStorage.getItem(\"userid\"),\n    MapId: localStorage.getItem(\"mapid\")\n  }); // Edit Post\n\n  let [getPostEdit, setGetPostEdit] = useState({});\n\n  const onchangeEdit = event => {\n    setGetPostEdit({ ...getPostEdit,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const onSubmitEdit = async res => {\n    try {\n      const GetEdit = await EditPost(getPostEdit);\n\n      if (GetEdit.data.success) {\n        createNotification(\"warning\", GetEdit.data.Message);\n      }\n    } catch (error) {\n      createNotification(\"error\", \"Title can't be empty\");\n    }\n  };\n\n  const onchangeCreate = event => {\n    setCreatePost({ ...createPost,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const getPostBymapid = async () => {\n    try {\n      const GetallPostzx = await getPostsByMapId(localStorage.getItem(\"mapid\"));\n\n      if (GetallPostzx.success) {\n        setPost(GetallPostzx.Post_of_User);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onclickGetonePost = async event => {\n    const getOneP = await getOnePost(event.target.value);\n\n    if (getOneP.success) {\n      setGetPostEdit(getOneP.posts);\n      getPostEdit = getOneP.posts;\n    }\n  };\n\n  const onSubmitCreate = async event => {\n    event.preventDefault();\n\n    try {\n      const onCreate = await createnewPost(createPost);\n\n      if (onCreate.data.success) {\n        createNotification(\"success\", \"Create new post success\");\n      }\n    } catch (error) {\n      createNotification(\"error\", \"Title can't be empty\");\n    }\n  };\n\n  const RemovePost = async event => {\n    await DeletedPost(event.target.value);\n  };\n\n  const getOneMap = async () => {\n    const req = await getOneMapby_Id(localStorage.getItem(\"mapid\"));\n    setMap(req.mapget.color);\n  };\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"token\")) {\n      return nav(\"/login\");\n    }\n\n    getPostBymapid();\n\n    if (istrue) {\n      getOneMap();\n      setistrue(false);\n    }\n  });\n\n  const gobackHomepage = () => {\n    nav(\"/homepage\");\n    window.location.reaload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        zIndex: \"200\"\n      },\n      children: /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        padding: \"4px\",\n        position: \"fixed\"\n      },\n      className: \"cssforDashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"PnutxUgdEDnVe3ZzdW/Nog6UXIY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useNavigate","useEffect","useState","Navbar","Map","Button","React","NotificationContainer","createNotification","getPosts","getPostsByMapId","createnewPost","DeletedPost","getOnePost","EditPost","getOneMapby_Id","updateMap","udlus","CheckLoginUser","ReactTooltip","ModalEdit","ModalAddpost","FormSendMail","decodeToken","Icon","linear","Dashboard","Post","setPost","setMap","istrue","setistrue","formupdatecolor","setformupdatecolor","NameColor","onhandlechangecolor","event","target","name","value","Submitcolor","e","color","push","myDecodedToken","localStorage","getItem","nav","createPost","setCreatePost","title","Des","Url","Behavior","user","MapId","getPostEdit","setGetPostEdit","onchangeEdit","onSubmitEdit","res","GetEdit","data","success","Message","error","onchangeCreate","getPostBymapid","GetallPostzx","Post_of_User","console","log","onclickGetonePost","getOneP","posts","onSubmitCreate","preventDefault","onCreate","RemovePost","getOneMap","req","mapget","gobackHomepage","window","location","reaload","position","zIndex","width","height","padding"],"sources":["D:/Deploy/frontendDACN/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Navbar } from \"../Layout/Navbar\";\r\nimport { Map } from \"../Layout/Caroucel\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport React from \"react\";\r\nimport { NotificationContainer } from \"react-notifications\";\r\nimport { createNotification } from \"../Notifications/notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport {\r\n  getPosts,\r\n  getPostsByMapId,\r\n  createnewPost,\r\n  DeletedPost,\r\n  getOnePost,\r\n  EditPost,\r\n  getOneMapby_Id,\r\n  updateMap,\r\n} from \"./postBehavior\";\r\nimport { udlus } from \"../Login/UserBehavior\";\r\nimport { CheckLoginUser } from \"../Login/UserBehavior\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { ModalEdit, ModalAddpost } from \"./handleDash\";\r\nimport { FormSendMail } from \"../SendEmail/Sendmail\";\r\nimport { decodeToken } from \"react-jwt\";\r\nimport \"./style.css\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport { linear } from \"eases\";\r\n\r\nexport const Dashboard = () => {\r\n  const [Post, setPost] = useState();\r\n  const [Map, setMap] = useState([]);\r\n  const [istrue, setistrue] = useState(true);\r\n  const [formupdatecolor, setformupdatecolor] = useState({\r\n    NameColor: \"\",\r\n  });\r\n  const onhandlechangecolor = (event) => {\r\n    setformupdatecolor({\r\n      ...formupdatecolor,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const Submitcolor = async (e) => {\r\n    let color = Map;\r\n    color.push(formupdatecolor);\r\n    await updateMap(color);\r\n    setistrue(true);\r\n  };\r\n  let myDecodedToken = decodeToken(localStorage.getItem(\"CodeShare\"));\r\n  let nav = useNavigate();\r\n\r\n  const [createPost, setCreatePost] = useState({\r\n    title: \"\",\r\n    Des: \"\",\r\n    Url: \"\",\r\n    Behavior: \"Learning\",\r\n    color: \"#ffa500\",\r\n    user: localStorage.getItem(\"userid\"),\r\n    MapId: localStorage.getItem(\"mapid\"),\r\n  });\r\n\r\n  // Edit Post\r\n  let [getPostEdit, setGetPostEdit] = useState({});\r\n\r\n  const onchangeEdit = (event) => {\r\n    setGetPostEdit({\r\n      ...getPostEdit,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmitEdit = async (res) => {\r\n    try {\r\n      const GetEdit = await EditPost(getPostEdit);\r\n      if (GetEdit.data.success) {\r\n        createNotification(\"warning\", GetEdit.data.Message);\r\n      }\r\n    } catch (error) {\r\n      createNotification(\"error\", \"Title can't be empty\");\r\n    }\r\n  };\r\n\r\n  const onchangeCreate = (event) => {\r\n    setCreatePost({\r\n      ...createPost,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const getPostBymapid = async () => {\r\n    try {\r\n      const GetallPostzx = await getPostsByMapId(localStorage.getItem(\"mapid\"));\r\n\r\n      if (GetallPostzx.success) {\r\n        setPost(GetallPostzx.Post_of_User);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onclickGetonePost = async (event) => {\r\n    const getOneP = await getOnePost(event.target.value);\r\n\r\n    if (getOneP.success) {\r\n      setGetPostEdit(getOneP.posts);\r\n      getPostEdit = getOneP.posts;\r\n    }\r\n  };\r\n\r\n  const onSubmitCreate = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const onCreate = await createnewPost(createPost);\r\n      if (onCreate.data.success) {\r\n        createNotification(\"success\", \"Create new post success\");\r\n      }\r\n    } catch (error) {\r\n      createNotification(\"error\", \"Title can't be empty\");\r\n    }\r\n  };\r\n  const RemovePost = async (event) => {\r\n    await DeletedPost(event.target.value);\r\n  };\r\n  const getOneMap = async () => {\r\n    const req = await getOneMapby_Id(localStorage.getItem(\"mapid\"));\r\n    setMap(req.mapget.color);\r\n  };\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"token\")) {\r\n      return nav(\"/login\");\r\n    }\r\n    getPostBymapid();\r\n    if (istrue) {\r\n      getOneMap();\r\n      setistrue(false);\r\n    }\r\n  });\r\n\r\n  const gobackHomepage = () => {\r\n    nav(\"/homepage\");\r\n    window.location.reaload();\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar></Navbar>\r\n      <div style={{ position: \"fixed\", zIndex: \"200\" }}>\r\n        <NotificationContainer></NotificationContainer>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          padding: \"4px\",\r\n\r\n          position: \"fixed\",\r\n        }}\r\n        className=\"cssforDashboard\"\r\n      >\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}