{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\DoAn_CN\\\\my-app\\\\src\\\\components\\\\Auth\\\\ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport NavbarMenu from \"../layout/NavbarMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = _ref => {\n  _s();\n\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  const {\n    authState: {\n      authLoading,\n      isAuthenticated\n    }\n  } = useContext(AuthContext);\n  if (authLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spinner-container\",\n    children: /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      variant: \"info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavbarMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Component, { ...rest,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProtectedRoute, \"SlXQvAVOyDl/xC3FAPRQMRGAI6g=\");\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Route","Redirect","useContext","AuthContext","Spinner","NavbarMenu","ProtectedRoute","component","Component","rest","authState","authLoading","isAuthenticated","props"],"sources":["D:/ReactJS/DoAn_CN/my-app/src/components/Auth/ProtectedRoute.js"],"sourcesContent":["import { Route, Redirect } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport NavbarMenu from \"../layout/NavbarMenu\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const {\r\n    authState: { authLoading, isAuthenticated },\r\n  } = useContext(AuthContext);\r\n\r\n  if (authLoading)\r\n    return (\r\n      <div className=\"spinner-container\">\r\n        <Spinner animation=\"border\" variant=\"info\" />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated ? (\r\n          <>\r\n            <NavbarMenu />\r\n            <Component {...rest} {...props} />\r\n          </>\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;;;AAEA,MAAMC,cAAc,GAAG,QAAuC;EAAA;;EAAA,IAAtC;IAAEC,SAAS,EAAEC,SAAb;IAAwB,GAAGC;EAA3B,CAAsC;EAC5D,MAAM;IACJC,SAAS,EAAE;MAAEC,WAAF;MAAeC;IAAf;EADP,IAEFV,UAAU,CAACC,WAAD,CAFd;EAIA,IAAIQ,WAAJ,EACE,oBACE;IAAK,SAAS,EAAC,mBAAf;IAAA,uBACE,QAAC,OAAD;MAAS,SAAS,EAAC,QAAnB;MAA4B,OAAO,EAAC;IAApC;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;EAMF,oBACE,QAAC,KAAD,OACMF,IADN;IAEE,MAAM,EAAGI,KAAD,IACND,eAAe,gBACb;MAAA,wBACE,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,SAAD,OAAeH,IAAf;QAAA,GAAyBI;MAAzB;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA,gBADa,gBAMb,QAAC,QAAD;MAAU,EAAE,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA;EATN;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CA3BD;;GAAMP,c;;KAAAA,c;AA6BN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}