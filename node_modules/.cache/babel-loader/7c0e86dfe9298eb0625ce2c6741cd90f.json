{"ast":null,"code":"var _jsxFileName = \"D:\\\\DOANCN\\\\DoAn_CN\\\\my-app\\\\src\\\\components\\\\LayoutConnectDB\\\\Layout.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { getOneColums } from \"../Dashboard/postBehavior\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ModalAddColumn } from \"./LayoutDBhandle\";\nimport { getPosts, //change to get all post by MAPID\ngetPostsByMapId, initColumns, updateColumns, getAllColumns, //change to get post by MAPID\ngetColumnsByMapId, DeletedPost, getOneColumsByidBody, DeletedColumns_ByID } from \"../Dashboard/postBehavior\";\nimport NotificationContainer from \"react-notifications/lib/NotificationContainer\";\nimport { createNotification } from \"../Notifications/notifications\";\nimport \"./style.css\";\nimport Column from \"./Column\";\nimport * as Icon from \"react-bootstrap-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LayoutDNDConnectDB = () => {\n  _s();\n\n  const [Posthave, setPosthave] = useState([]);\n  const [state, setstate] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [removeTask, setRemovetask] = useState(\"\");\n  const [removeTaskfromCol, setRemovetaskfromCol] = useState(\"\");\n  const nav = useNavigate();\n\n  const getallPostBYmapid = async () => {\n    try {\n      const GetallPostzx = await getPostsByMapId(localStorage.getItem(\"mapid\"));\n\n      if (GetallPostzx.success) {\n        setstate(GetallPostzx.Post_of_User);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  let title = {\n    //Add MapID\n    id: `idInit${localStorage.getItem(\"mapid\")}`,\n    title: \"Process\",\n    MapId: localStorage.getItem(\"mapid\")\n  };\n\n  const updateColumnsWhenHandle = async e => {\n    await updateColumns(e);\n  };\n\n  const updatecolumnsinit = async () => {\n    let UpdateInit = {\n      _id: localStorage.getItem(\"IDinitColumns\"),\n      taskIds: []\n    };\n    let laytemp = [];\n    let getposthave = [...Posthave];\n\n    if (columns.length === 0) {\n      for (let index = 0; index < state.length; index++) {\n        UpdateInit.taskIds.push(state[index]._id);\n      }\n    } else {\n      for (let index = 0; index < columns.length; index++) {\n        if (columns[index].taskIds[0] !== undefined) {\n          for (let i = 0; i < columns[index].taskIds[0].length; i++) {\n            laytemp.push(columns[index].taskIds[0][i]);\n          }\n        }\n      }\n\n      if (state.length >= laytemp.length) {\n        for (let index = 0; index < state.length; index++) {\n          if (laytemp.indexOf(`${state[index]._id}`) === -1) {\n            getposthave.push(state[index]._id);\n          }\n        }\n      } // else {\n      //   let laytemp2 = [];\n      //   for (let index = 0; index < laytemp.length; index++) {\n      //     if (state[index] !== undefined) {\n      //       if (laytemp.indexOf(`${state[index]._id}`) === -1) {\n      //         laytemp2.push(state[index]._id);\n      //       }\n      //     } else {\n      //       laytemp2.push(laytemp[index]);\n      //     }\n      //   }\n      //   let columnsCoppy = [];\n      //   for (let index = 0; index < columns.length; index++) {\n      //     for (let i = 0; i < columns[index].taskIds[0].length; i++) {\n      //       if (laytemp2.indexOf(`${columns[index].taskIds[0][i]}`) > -1) {\n      //         RemovePost(columns[index].taskIds[0][i]);\n      //         columnsCoppy = [\n      //           ...columns[index].taskIds[0].splice(\n      //             columns[index].taskIds[0].indexOf(\n      //               `${columns[index].taskIds[0][i]}`\n      //             ),\n      //             1\n      //           ),\n      //         ];\n      //       }\n      //     }\n      //   }\n      //   console.log(\"columnsCoppy\", columnsCoppy);\n      //   autorun();\n      // }\n\n\n      autorun();\n      UpdateInit.taskIds = [...getposthave];\n    }\n\n    await updateColumns(UpdateInit);\n    checkValidColumninit(title);\n  };\n\n  const GetallColByMapId = async () => {\n    const gAllCol = await getColumnsByMapId(localStorage.getItem(\"mapid\"));\n    setColumns(gAllCol.getALlCol);\n  };\n\n  const getInitColumns = async () => {\n    checkValidColumninit(title);\n    autorun();\n\n    if (localStorage.getItem(\"IDinitColumns\") !== null) {\n      DeltedById(localStorage.getItem(\"IDinitColumns\"));\n    }\n\n    const getInit = await initColumns(title);\n    localStorage.setItem(\"IDinitColumns\", getInit.data.newcolumns._id);\n    updatecolumnsinit();\n  };\n\n  const DeltedById = async id => {\n    await DeletedColumns_ByID(id);\n    autorun();\n  };\n\n  const autorun = () => {\n    for (let index = 0; index < 5; index++) {\n      // GetallCol();\n      // getallPost();\n      getallPostBYmapid();\n      GetallColByMapId();\n    }\n  };\n\n  const deltedtask = async e => {\n    await DeletedPost(e);\n  };\n\n  const getPostTodeleteTask = async (e, idTask) => {\n    const req = await getOneColums(e);\n    let col = req.OneColumns;\n    const index = col.taskIds[0].indexOf(`${idTask}`);\n\n    if (index > -1) {\n      col.taskIds[0].splice(index, 1); // 2nd parameter means remove one item only\n    }\n\n    update;\n    console.log(\"Get col\", col, idTask);\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\") === null) {\n      return nav(\"/login\");\n    } // GetallCol();\n\n\n    GetallColByMapId();\n\n    if (removeTask) {\n      console.log(\"idTask\", removeTask);\n      console.log(\"idcol\", removeTaskfromCol);\n      getPostTodeleteTask(removeTaskfromCol, removeTask);\n      setRemovetaskfromCol(\"\");\n      setRemovetask(\"\");\n    }\n  });\n\n  const checkValidColumninit = async e => {\n    const res = await getOneColumsByidBody(e);\n    localStorage.setItem(\"IDinitColumns\", res.OneColumns._id);\n    setPosthave(res.OneColumns.taskIds[0]);\n\n    for (let index = 0; index < 4; index++) {\n      setPosthave(res.OneColumns.taskIds[0]);\n    }\n\n    return res.OneColumns;\n  };\n\n  window.onload = function () {\n    checkValidColumninit(title);\n    autorun();\n    console.clear();\n  };\n\n  const getOneColumsByid = async id => {\n    const getColumns = await getOneColums(id);\n    return getColumns.OneColumns;\n  };\n\n  const onDragEnd = async results => {\n    autorun();\n    const {\n      destination,\n      draggableId,\n      source\n    } = results;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    let startPromise = getOneColumsByid(source.droppableId);\n    let finishPromise = getOneColumsByid(destination.droppableId);\n    let starts = {};\n    let finishs = {};\n    startPromise.then(function (result) {\n      starts = { ...result\n      };\n      finishPromise.then(function (result) {\n        finishs = { ...result\n        };\n\n        if (starts._id === finishs._id) {\n          const newTaskID = Array.from(starts.taskIds);\n          newTaskID[0].splice(source.index, 1);\n          newTaskID[0].splice(destination.index, 0, draggableId);\n          const newcolumn = { ...starts,\n            taskIds: newTaskID[0]\n          };\n          updateColumnsWhenHandle(newcolumn);\n          checkValidColumninit(title);\n          return;\n        } else {\n          const finishtaskID = Array.from(finishs.taskIds);\n\n          if (finishtaskID[0] === undefined) {\n            finishtaskID[0] = [];\n          }\n\n          finishtaskID[0].splice(destination.index, 0, draggableId);\n          const newfinish = { ...finishs,\n            taskIds: finishtaskID[0]\n          };\n          const starttaskID = Array.from(starts.taskIds);\n          starttaskID[0].splice(source.index, 1);\n          const newstart = { ...starts,\n            taskIds: starttaskID[0]\n          };\n          updateColumnsWhenHandle(newstart);\n          updateColumnsWhenHandle(newfinish);\n          checkValidColumninit(title);\n          return;\n        }\n      });\n    });\n  };\n\n  const [addColumnsForm, setaddColumnsForm] = useState({\n    MapId: localStorage.getItem(\"mapid\"),\n    title: \"\"\n  });\n\n  const handleChangeFormAddColumns = event => {\n    setaddColumnsForm({ ...addColumnsForm,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const CreateNewColumn = async () => {\n    const req = await initColumns(addColumnsForm);\n    autorun();\n    return req;\n  };\n\n  const submitchange = async event => {\n    let updateCol = {\n      _id: event.target.value,\n      title: document.getElementById(`${event.target.value}`).innerText\n    };\n\n    if (updateCol.title.length > 25) {\n      createNotification(\"info\", \"Title no more than 25 characters \");\n    } else {\n      await updateColumns(updateCol);\n      createNotification(\"warning\", \"Update title success\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          style: {\n            opacity: \"0.8\",\n            height: \"136%\"\n          },\n          className: \"navbar navbar-expand-lg navbar-dark bg-dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"navbar-brand\",\n            href: \"#\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://cdn-icons-png.flaticon.com/512/3209/3209265.png\",\n              width: \"30\",\n              height: \"30\",\n              className: \"d-inline-block align-top\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), \"Smart-note\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"navbar-toggler\",\n            type: \"button\",\n            \"data-toggle\": \"collapse\",\n            \"data-target\": \"#my-nav-bar\",\n            \"aria-controls\": \"my-nav-bar\",\n            \"aria-expanded\": \"false\",\n            \"aria-label\": \"Toggle navigation\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"navbar-toggler-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collapse navbar-collapse\",\n            id: \"my-nav-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"navbar-nav\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"nav-item active\",\n                children: localStorage.getItem(\"managerUser\") === \"true\" ? /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: getInitColumns,\n                  children: \"Init map\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 21\n                }, this) : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"nav-item\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  style: {\n                    width: \"100%\",\n                    marginLeft: \"20px\"\n                  },\n                  href: \"/Dashboard\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"nav-item\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  style: {\n                    marginLeft: \"20px\"\n                  },\n                  className: \"btn btn-primary\",\n                  \"data-bs-toggle\": \"modal\",\n                  \"data-bs-target\": \"#exampleModal\",\n                  \"data-bs-whatever\": \"@mdo\",\n                  children: \"Create new Column\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"nav-item\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  style: {\n                    marginLeft: \"20px\"\n                  },\n                  className: \"btn btn-primary\",\n                  \"data-bs-toggle\": \"modal\",\n                  \"data-bs-target\": \"#exampleModal\",\n                  \"data-bs-whatever\": \"@mdo\",\n                  children: \"Reset all\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalAddColumn, {\n      addColumnsForm: addColumnsForm,\n      handleChangeFormAddColumns: handleChangeFormAddColumns,\n      CreateNewColumn: CreateNewColumn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: columns && columns.map((columID, index) => {\n          const colum = columns[index];\n          const task = colum.taskIds.map((taskIds, index) => colum.taskIds[index]);\n\n          if (task[0] === undefined) {\n            const lay = [];\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Column\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Column-navbar\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    onClick: submitchange,\n                    value: colum._id,\n                    className: \"btn btn-warning \",\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: colum._id,\n                    name: colum._id,\n                    className: \"card-title\",\n                    contentEditable: true,\n                    suppressContentEditableWarning: true,\n                    children: colum.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      DeltedById(colum._id);\n                    },\n                    className: \"btn btn-danger mt-1\",\n                    children: /*#__PURE__*/_jsxDEV(Icon.Trash, {\n                      fontWeight: 600,\n                      size: 20\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 406,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Column-Body\",\n                  children: /*#__PURE__*/_jsxDEV(Column, {\n                    setRemovetaskfromCol: setRemovetaskfromCol,\n                    setRemovetask: setRemovetask,\n                    column: colum,\n                    tasks: lay\n                  }, colum._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          } else {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Column\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Column-navbar\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    onClick: submitchange,\n                    value: colum._id,\n                    className: \"btn btn-warning \",\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: colum._id,\n                    name: colum._id,\n                    className: \"card-title\",\n                    contentEditable: true,\n                    suppressContentEditableWarning: true,\n                    children: colum.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      DeltedById(colum._id);\n                    },\n                    className: \"btn btn-danger mt-1\",\n                    children: /*#__PURE__*/_jsxDEV(Icon.Trash, {\n                      fontWeight: 600,\n                      size: 20\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 450,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Column-Body\",\n                  children: /*#__PURE__*/_jsxDEV(Column, {\n                    setRemovetaskfromCol: setRemovetaskfromCol,\n                    setRemovetask: setRemovetask,\n                    column: colum,\n                    tasks: task[0]\n                  }, colum._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LayoutDNDConnectDB, \"sDRdEXQkuFq6I9RBzmos/Kww5+I=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LayoutDNDConnectDB;\nexport default LayoutDNDConnectDB;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutDNDConnectDB\");","map":{"version":3,"names":["useState","useEffect","Button","DragDropContext","getOneColums","useNavigate","ModalAddColumn","getPosts","getPostsByMapId","initColumns","updateColumns","getAllColumns","getColumnsByMapId","DeletedPost","getOneColumsByidBody","DeletedColumns_ByID","NotificationContainer","createNotification","Column","Icon","LayoutDNDConnectDB","Posthave","setPosthave","state","setstate","columns","setColumns","removeTask","setRemovetask","removeTaskfromCol","setRemovetaskfromCol","nav","getallPostBYmapid","GetallPostzx","localStorage","getItem","success","Post_of_User","error","console","log","title","id","MapId","updateColumnsWhenHandle","e","updatecolumnsinit","UpdateInit","_id","taskIds","laytemp","getposthave","length","index","push","undefined","i","indexOf","autorun","checkValidColumninit","GetallColByMapId","gAllCol","getALlCol","getInitColumns","DeltedById","getInit","setItem","data","newcolumns","deltedtask","getPostTodeleteTask","idTask","req","col","OneColumns","splice","update","res","window","onload","clear","getOneColumsByid","getColumns","onDragEnd","results","destination","draggableId","source","droppableId","startPromise","finishPromise","starts","finishs","then","result","newTaskID","Array","from","newcolumn","finishtaskID","newfinish","starttaskID","newstart","addColumnsForm","setaddColumnsForm","handleChangeFormAddColumns","event","target","name","value","CreateNewColumn","submitchange","updateCol","document","getElementById","innerText","opacity","height","width","marginLeft","display","map","columID","colum","task","lay"],"sources":["D:/DOANCN/DoAn_CN/my-app/src/components/LayoutConnectDB/Layout.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport { getOneColums } from \"../Dashboard/postBehavior\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ModalAddColumn } from \"./LayoutDBhandle\";\r\nimport {\r\n  getPosts, //change to get all post by MAPID\r\n  getPostsByMapId,\r\n  initColumns,\r\n  updateColumns,\r\n  getAllColumns, //change to get post by MAPID\r\n  getColumnsByMapId,\r\n  DeletedPost,\r\n  getOneColumsByidBody,\r\n  DeletedColumns_ByID,\r\n} from \"../Dashboard/postBehavior\";\r\nimport NotificationContainer from \"react-notifications/lib/NotificationContainer\";\r\nimport { createNotification } from \"../Notifications/notifications\";\r\nimport \"./style.css\";\r\nimport Column from \"./Column\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nconst LayoutDNDConnectDB = () => {\r\n  const [Posthave, setPosthave] = useState([]);\r\n  const [state, setstate] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [removeTask, setRemovetask] = useState(\"\");\r\n  const [removeTaskfromCol, setRemovetaskfromCol] = useState(\"\");\r\n  const nav = useNavigate();\r\n\r\n  const getallPostBYmapid = async () => {\r\n    try {\r\n      const GetallPostzx = await getPostsByMapId(localStorage.getItem(\"mapid\"));\r\n      if (GetallPostzx.success) {\r\n        setstate(GetallPostzx.Post_of_User);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  let title = {\r\n    //Add MapID\r\n    id: `idInit${localStorage.getItem(\"mapid\")}`,\r\n    title: \"Process\",\r\n    MapId: localStorage.getItem(\"mapid\"),\r\n  };\r\n\r\n  const updateColumnsWhenHandle = async (e) => {\r\n    await updateColumns(e);\r\n  };\r\n  const updatecolumnsinit = async () => {\r\n    let UpdateInit = {\r\n      _id: localStorage.getItem(\"IDinitColumns\"),\r\n      taskIds: [],\r\n    };\r\n    let laytemp = [];\r\n    let getposthave = [...Posthave];\r\n    if (columns.length === 0) {\r\n      for (let index = 0; index < state.length; index++) {\r\n        UpdateInit.taskIds.push(state[index]._id);\r\n      }\r\n    } else {\r\n      for (let index = 0; index < columns.length; index++) {\r\n        if (columns[index].taskIds[0] !== undefined) {\r\n          for (let i = 0; i < columns[index].taskIds[0].length; i++) {\r\n            laytemp.push(columns[index].taskIds[0][i]);\r\n          }\r\n        }\r\n      }\r\n      if (state.length >= laytemp.length) {\r\n        for (let index = 0; index < state.length; index++) {\r\n          if (laytemp.indexOf(`${state[index]._id}`) === -1) {\r\n            getposthave.push(state[index]._id);\r\n          }\r\n        }\r\n      }\r\n\r\n      // else {\r\n      //   let laytemp2 = [];\r\n      //   for (let index = 0; index < laytemp.length; index++) {\r\n      //     if (state[index] !== undefined) {\r\n      //       if (laytemp.indexOf(`${state[index]._id}`) === -1) {\r\n      //         laytemp2.push(state[index]._id);\r\n      //       }\r\n      //     } else {\r\n      //       laytemp2.push(laytemp[index]);\r\n      //     }\r\n      //   }\r\n      //   let columnsCoppy = [];\r\n      //   for (let index = 0; index < columns.length; index++) {\r\n      //     for (let i = 0; i < columns[index].taskIds[0].length; i++) {\r\n      //       if (laytemp2.indexOf(`${columns[index].taskIds[0][i]}`) > -1) {\r\n      //         RemovePost(columns[index].taskIds[0][i]);\r\n      //         columnsCoppy = [\r\n      //           ...columns[index].taskIds[0].splice(\r\n      //             columns[index].taskIds[0].indexOf(\r\n      //               `${columns[index].taskIds[0][i]}`\r\n      //             ),\r\n      //             1\r\n      //           ),\r\n      //         ];\r\n      //       }\r\n      //     }\r\n      //   }\r\n      //   console.log(\"columnsCoppy\", columnsCoppy);\r\n      //   autorun();\r\n      // }\r\n\r\n      autorun();\r\n      UpdateInit.taskIds = [...getposthave];\r\n    }\r\n    await updateColumns(UpdateInit);\r\n    checkValidColumninit(title);\r\n  };\r\n\r\n  const GetallColByMapId = async () => {\r\n    const gAllCol = await getColumnsByMapId(localStorage.getItem(\"mapid\"));\r\n    setColumns(gAllCol.getALlCol);\r\n  };\r\n\r\n  const getInitColumns = async () => {\r\n    checkValidColumninit(title);\r\n    autorun();\r\n    if (localStorage.getItem(\"IDinitColumns\") !== null) {\r\n      DeltedById(localStorage.getItem(\"IDinitColumns\"));\r\n    }\r\n    const getInit = await initColumns(title);\r\n    localStorage.setItem(\"IDinitColumns\", getInit.data.newcolumns._id);\r\n    updatecolumnsinit();\r\n  };\r\n  const DeltedById = async (id) => {\r\n    await DeletedColumns_ByID(id);\r\n    autorun();\r\n  };\r\n  const autorun = () => {\r\n    for (let index = 0; index < 5; index++) {\r\n      // GetallCol();\r\n      // getallPost();\r\n      getallPostBYmapid();\r\n      GetallColByMapId();\r\n    }\r\n  };\r\n  const deltedtask = async (e) => {\r\n    await DeletedPost(e);\r\n  };\r\n  const getPostTodeleteTask = async (e, idTask) => {\r\n    const req = await getOneColums(e);\r\n    let col = req.OneColumns;\r\n\r\n    const index = col.taskIds[0].indexOf(`${idTask}`);\r\n    if (index > -1) {\r\n      col.taskIds[0].splice(index, 1); // 2nd parameter means remove one item only\r\n    }\r\n    update\r\n    console.log(\"Get col\", col, idTask);\r\n  };\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\") === null) {\r\n      return nav(\"/login\");\r\n    }\r\n    // GetallCol();\r\n    GetallColByMapId();\r\n    if (removeTask) {\r\n      console.log(\"idTask\", removeTask);\r\n      console.log(\"idcol\", removeTaskfromCol);\r\n\r\n      getPostTodeleteTask(removeTaskfromCol, removeTask);\r\n      setRemovetaskfromCol(\"\");\r\n      setRemovetask(\"\");\r\n    }\r\n  });\r\n  const checkValidColumninit = async (e) => {\r\n    const res = await getOneColumsByidBody(e);\r\n    localStorage.setItem(\"IDinitColumns\", res.OneColumns._id);\r\n    setPosthave(res.OneColumns.taskIds[0]);\r\n    for (let index = 0; index < 4; index++) {\r\n      setPosthave(res.OneColumns.taskIds[0]);\r\n    }\r\n    return res.OneColumns;\r\n  };\r\n  window.onload = function () {\r\n    checkValidColumninit(title);\r\n    autorun();\r\n    console.clear();\r\n  };\r\n  const getOneColumsByid = async (id) => {\r\n    const getColumns = await getOneColums(id);\r\n    return getColumns.OneColumns;\r\n  };\r\n\r\n  const onDragEnd = async (results) => {\r\n    autorun();\r\n    const { destination, draggableId, source } = results;\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    let startPromise = getOneColumsByid(source.droppableId);\r\n    let finishPromise = getOneColumsByid(destination.droppableId);\r\n    let starts = {};\r\n    let finishs = {};\r\n    startPromise.then(function (result) {\r\n      starts = {\r\n        ...result,\r\n      };\r\n      finishPromise.then(function (result) {\r\n        finishs = {\r\n          ...result,\r\n        };\r\n        if (starts._id === finishs._id) {\r\n          const newTaskID = Array.from(starts.taskIds);\r\n          newTaskID[0].splice(source.index, 1);\r\n          newTaskID[0].splice(destination.index, 0, draggableId);\r\n\r\n          const newcolumn = {\r\n            ...starts,\r\n            taskIds: newTaskID[0],\r\n          };\r\n          updateColumnsWhenHandle(newcolumn);\r\n          checkValidColumninit(title);\r\n          return;\r\n        } else {\r\n          const finishtaskID = Array.from(finishs.taskIds);\r\n\r\n          if (finishtaskID[0] === undefined) {\r\n            finishtaskID[0] = [];\r\n          }\r\n          finishtaskID[0].splice(destination.index, 0, draggableId);\r\n          const newfinish = {\r\n            ...finishs,\r\n            taskIds: finishtaskID[0],\r\n          };\r\n\r\n          const starttaskID = Array.from(starts.taskIds);\r\n          starttaskID[0].splice(source.index, 1);\r\n          const newstart = {\r\n            ...starts,\r\n            taskIds: starttaskID[0],\r\n          };\r\n\r\n          updateColumnsWhenHandle(newstart);\r\n          updateColumnsWhenHandle(newfinish);\r\n          checkValidColumninit(title);\r\n          return;\r\n        }\r\n      });\r\n    });\r\n  };\r\n  const [addColumnsForm, setaddColumnsForm] = useState({\r\n    MapId: localStorage.getItem(\"mapid\"),\r\n    title: \"\",\r\n  });\r\n  const handleChangeFormAddColumns = (event) => {\r\n    setaddColumnsForm({\r\n      ...addColumnsForm,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const CreateNewColumn = async () => {\r\n    const req = await initColumns(addColumnsForm);\r\n    autorun();\r\n    return req;\r\n  };\r\n  const submitchange = async (event) => {\r\n    let updateCol = {\r\n      _id: event.target.value,\r\n      title: document.getElementById(`${event.target.value}`).innerText,\r\n    };\r\n\r\n    if (updateCol.title.length > 25) {\r\n      createNotification(\"info\", \"Title no more than 25 characters \");\r\n    } else {\r\n      await updateColumns(updateCol);\r\n      createNotification(\"warning\", \"Update title success\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <nav\r\n            style={{ opacity: \"0.8\", height: \"136%\" }}\r\n            className=\"navbar navbar-expand-lg navbar-dark bg-dark\"\r\n          >\r\n            <a className=\"navbar-brand\" href=\"#\">\r\n              <img\r\n                src=\"https://cdn-icons-png.flaticon.com/512/3209/3209265.png\"\r\n                width=\"30\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n                alt=\"\"\r\n              />\r\n              Smart-note\r\n            </a>\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#my-nav-bar\"\r\n              aria-controls=\"my-nav-bar\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"my-nav-bar\">\r\n              <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item active\">\r\n                  {localStorage.getItem(\"managerUser\") === \"true\" ? (\r\n                    <Button onClick={getInitColumns}>Init map</Button>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <a\r\n                    style={{ width: \"100%\", marginLeft: \"20px\" }}\r\n                    href=\"/Dashboard\"\r\n                  >\r\n                    <Button>Back</Button>\r\n                  </a>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <Button\r\n                    type=\"button\"\r\n                    style={{ marginLeft: \"20px\" }}\r\n                    className=\"btn btn-primary\"\r\n                    data-bs-toggle=\"modal\"\r\n                    data-bs-target=\"#exampleModal\"\r\n                    data-bs-whatever=\"@mdo\"\r\n                  >\r\n                    Create new Column\r\n                  </Button>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Button\r\n                    type=\"button\"\r\n                    style={{ marginLeft: \"20px\" }}\r\n                    className=\"btn btn-primary\"\r\n                    data-bs-toggle=\"modal\"\r\n                    data-bs-target=\"#exampleModal\"\r\n                    data-bs-whatever=\"@mdo\"\r\n                  >\r\n                    Reset all\r\n                  </Button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n      <NotificationContainer></NotificationContainer>\r\n      <ModalAddColumn\r\n        addColumnsForm={addColumnsForm}\r\n        handleChangeFormAddColumns={handleChangeFormAddColumns}\r\n        CreateNewColumn={CreateNewColumn}\r\n      ></ModalAddColumn>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div style={{ display: \"flex\" }}>\r\n          {columns &&\r\n            columns.map((columID, index) => {\r\n              const colum = columns[index];\r\n              const task = colum.taskIds.map(\r\n                (taskIds, index) => colum.taskIds[index]\r\n              );\r\n              if (task[0] === undefined) {\r\n                const lay = [];\r\n                return (\r\n                  <>\r\n                    <div className=\"Column\">\r\n                      <div className=\"Column-navbar\">\r\n                        <Button\r\n                          onClick={submitchange}\r\n                          value={colum._id}\r\n                          className=\"btn btn-warning \"\r\n                        >\r\n                          Save\r\n                        </Button>\r\n\r\n                        <div\r\n                          id={colum._id}\r\n                          name={colum._id}\r\n                          className=\"card-title\"\r\n                          contentEditable={true}\r\n                          suppressContentEditableWarning={true}\r\n                        >\r\n                          {colum.title}\r\n                        </div>\r\n\r\n                        <Button\r\n                          onClick={() => {\r\n                            DeltedById(colum._id);\r\n                          }}\r\n                          className=\"btn btn-danger mt-1\"\r\n                        >\r\n                          <Icon.Trash fontWeight={600} size={20}></Icon.Trash>\r\n                        </Button>\r\n                      </div>\r\n                      <div className=\"Column-Body\">\r\n                        <Column\r\n                          setRemovetaskfromCol={setRemovetaskfromCol}\r\n                          setRemovetask={setRemovetask}\r\n                          key={colum._id}\r\n                          column={colum}\r\n                          tasks={lay}\r\n                        ></Column>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                );\r\n              } else {\r\n                return (\r\n                  <>\r\n                    <div className=\"Column\">\r\n                      <div className=\"Column-navbar\">\r\n                        <Button\r\n                          onClick={submitchange}\r\n                          value={colum._id}\r\n                          className=\"btn btn-warning \"\r\n                        >\r\n                          Save\r\n                        </Button>\r\n\r\n                        <div\r\n                          id={colum._id}\r\n                          name={colum._id}\r\n                          className=\"card-title\"\r\n                          contentEditable={true}\r\n                          suppressContentEditableWarning={true}\r\n                        >\r\n                          {colum.title}\r\n                        </div>\r\n\r\n                        <Button\r\n                          onClick={() => {\r\n                            DeltedById(colum._id);\r\n                          }}\r\n                          className=\"btn btn-danger mt-1\"\r\n                        >\r\n                          <Icon.Trash fontWeight={600} size={20}></Icon.Trash>\r\n                        </Button>\r\n                      </div>\r\n                      <div className=\"Column-Body\">\r\n                        <Column\r\n                          setRemovetaskfromCol={setRemovetaskfromCol}\r\n                          setRemovetask={setRemovetask}\r\n                          key={colum._id}\r\n                          column={colum}\r\n                          tasks={task[0]}\r\n                        ></Column>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                );\r\n              }\r\n            })}\r\n        </div>\r\n      </DragDropContext>\r\n    </>\r\n  );\r\n};\r\nexport default LayoutDNDConnectDB;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}