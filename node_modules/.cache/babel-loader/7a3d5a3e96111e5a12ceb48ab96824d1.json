{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\DoAn_CN\\\\my-app\\\\src\\\\components\\\\LayoutConnectDB\\\\Layout.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { getPosts, initColumns, updateColumns, getAllColumns, getAllColumnOrder, updateColumnOrder } from \"../Dashboard/postBehavior\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LayoutDNDConnectDB = () => {\n  _s();\n\n  const [state, setstate] = useState();\n  const [columns, setColumns] = useState();\n  const [orderColumns, setOrderColumns] = useState();\n\n  const getallPost = async () => {\n    try {\n      const GetallPostzx = await getPosts(localStorage.getItem(\"token\"));\n\n      if (GetallPostzx.success) {\n        setstate(GetallPostzx.Post_of_User);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  let title = {\n    title: \"Process\"\n  };\n\n  const updatecolumnsinit = async () => {\n    let UpdateInit = {\n      _id: localStorage.getItem(\"IDinitColumns\"),\n      taskIds: []\n    };\n\n    for (let index = 0; index < state.length; index++) {\n      UpdateInit.taskIds.push(state[index]._id);\n    } // console.log(\"Post\", state);\n\n\n    const getUpdate = await updateColumns(UpdateInit); // console.log(\"getUpdate\", getUpdate.data.newOrder);\n  };\n\n  const GetallCol = async () => {\n    const gAllCol = await (await getAllColumns()).data.getALlCol;\n    setColumns(gAllCol);\n  };\n\n  const getInitColumns = async () => {\n    const getInit = await initColumns(title);\n    localStorage.setItem(\"IDinitColumns\", getInit.data.newcolumns._id);\n    updatecolumnsinit();\n  };\n\n  const updateOrderColumns = async () => {\n    let UpdateInit = {\n      _id: localStorage.getItem(\"IDinitColumns\"),\n      columOrder: []\n    };\n\n    for (let index = 0; index < state.length; index++) {\n      UpdateInit.columOrder.push(state[index]._id);\n    }\n\n    console.log(\"state\", state);\n    console.log(\"order\", UpdateInit.columOrder);\n    const getUpdate = await updateColumnOrder(UpdateInit); // console.log(\"DATA\", getUpdate);\n  };\n\n  const getAllorderColumn = async () => {\n    const getALLOrder = (await getAllColumnOrder()).data.getALlColOrder;\n    updateOrderColumns();\n  };\n\n  useEffect(() => {\n    getallPost();\n    GetallCol();\n  });\n\n  const onDragEnd = results => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: getInitColumns,\n      children: \"init map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: getAllorderColumn,\n      children: \"get All OrderColumns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), columns && columns.map(iteam => {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"title : \", iteam.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"content: \", iteam.DES]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, iteam._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(LayoutDNDConnectDB, \"U7eVxqzQCq3gPxBQXHfM7z7Wghw=\");\n\n_c = LayoutDNDConnectDB;\nexport default LayoutDNDConnectDB;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutDNDConnectDB\");","map":{"version":3,"names":["useState","useEffect","Button","DragDropContext","getPosts","initColumns","updateColumns","getAllColumns","getAllColumnOrder","updateColumnOrder","LayoutDNDConnectDB","state","setstate","columns","setColumns","orderColumns","setOrderColumns","getallPost","GetallPostzx","localStorage","getItem","success","Post_of_User","error","console","log","title","updatecolumnsinit","UpdateInit","_id","taskIds","index","length","push","getUpdate","GetallCol","gAllCol","data","getALlCol","getInitColumns","getInit","setItem","newcolumns","updateOrderColumns","columOrder","getAllorderColumn","getALLOrder","getALlColOrder","onDragEnd","results","map","iteam","DES"],"sources":["D:/ReactJS/DoAn_CN/my-app/src/components/LayoutConnectDB/Layout.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport {\r\n  getPosts,\r\n  initColumns,\r\n  updateColumns,\r\n  getAllColumns,\r\n  getAllColumnOrder,\r\n  updateColumnOrder,\r\n} from \"../Dashboard/postBehavior\";\r\nconst LayoutDNDConnectDB = () => {\r\n  const [state, setstate] = useState();\r\n  const [columns, setColumns] = useState();\r\n  const [orderColumns, setOrderColumns] = useState();\r\n  const getallPost = async () => {\r\n    try {\r\n      const GetallPostzx = await getPosts(localStorage.getItem(\"token\"));\r\n      if (GetallPostzx.success) {\r\n        setstate(GetallPostzx.Post_of_User);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  let title = {\r\n    title: \"Process\",\r\n  };\r\n\r\n  const updatecolumnsinit = async () => {\r\n    let UpdateInit = {\r\n      _id: localStorage.getItem(\"IDinitColumns\"),\r\n      taskIds: [],\r\n    };\r\n    for (let index = 0; index < state.length; index++) {\r\n      UpdateInit.taskIds.push(state[index]._id);\r\n    }\r\n    // console.log(\"Post\", state);\r\n    const getUpdate = await updateColumns(UpdateInit);\r\n    // console.log(\"getUpdate\", getUpdate.data.newOrder);\r\n  };\r\n\r\n  const GetallCol = async () => {\r\n    const gAllCol = await (await getAllColumns()).data.getALlCol;\r\n    setColumns(gAllCol);\r\n  };\r\n\r\n  const getInitColumns = async () => {\r\n    const getInit = await initColumns(title);\r\n    localStorage.setItem(\"IDinitColumns\", getInit.data.newcolumns._id);\r\n    updatecolumnsinit();\r\n  };\r\n\r\n  const updateOrderColumns = async () => {\r\n    let UpdateInit = {\r\n      _id: localStorage.getItem(\"IDinitColumns\"),\r\n      columOrder: [],\r\n    };\r\n    for (let index = 0; index < state.length; index++) {\r\n      UpdateInit.columOrder.push(state[index]._id);\r\n    }\r\n    console.log(\"state\", state);\r\n    console.log(\"order\", UpdateInit.columOrder);\r\n    const getUpdate = await updateColumnOrder(UpdateInit);\r\n    // console.log(\"DATA\", getUpdate);\r\n  };\r\n\r\n  const getAllorderColumn = async () => {\r\n    const getALLOrder = (await getAllColumnOrder()).data.getALlColOrder;\r\n    updateOrderColumns();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getallPost();\r\n    GetallCol();\r\n  });\r\n  const onDragEnd = (results) => {};\r\n  return (\r\n    <>\r\n      <Button onClick={getInitColumns}>init map</Button>\r\n      <Button onClick={getAllorderColumn}>get All OrderColumns</Button>\r\n      <DragDropContext></DragDropContext>\r\n      {columns &&\r\n        columns.map((iteam) => {\r\n          return (\r\n            <form key={iteam._id}>\r\n              <div>title : {iteam.title}</div>\r\n              <div>content: {iteam.DES}</div>\r\n            </form>\r\n          );\r\n        })}\r\n\r\n      {/* <DragDropContext onDragEnd={onDragEnd}>\r\n        <div style={{ display: \"flex\" }}>\r\n          {state.columOrder.map((columID) => {\r\n            const colum = state.colums[columID];\r\n            const tasks = colum.taskIds.map((taskIds) => state.tasks[taskIds]);\r\n            return (\r\n              <Column key={colum.id} column={colum} tasks={tasks}></Column>\r\n            );\r\n          })}\r\n        </div>\r\n      </DragDropContext> */}\r\n    </>\r\n  );\r\n};\r\nexport default LayoutDNDConnectDB;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}