{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\DoAn_CN\\\\my-app\\\\src\\\\components\\\\LayoutConnectDB\\\\Layout.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport { getPosts, initColumns } from \"../Dashboard/postBehavior\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LayoutDNDConnectDB = () => {\n  _s();\n\n  const [state, setstate] = useState();\n\n  const getallPost = async () => {\n    try {\n      const GetallPostzx = await getPosts(localStorage.getItem(\"token\"));\n\n      if (GetallPostzx.success) {\n        setstate(GetallPostzx.Post_of_User);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  let title = {\n    title: \"todo smthg\"\n  };\n\n  const getInitColumns = async () => {\n    try {\n      const getInit = await initColumns(title);\n\n      if (getInit.success) {\n        console.log(\"init\", getInit);\n      }\n    } catch (error) {\n      console.log(\"init\", getIni);\n    }\n  };\n\n  useEffect(() => {\n    getallPost();\n    getInitColumns();\n  });\n\n  const onDragEnd = results => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      children: \"init map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LayoutDNDConnectDB, \"Kkf36MrFgFm4thQNo3UiWoEe4Ts=\");\n\n_c = LayoutDNDConnectDB;\nexport default LayoutDNDConnectDB;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutDNDConnectDB\");","map":{"version":3,"names":["useState","useEffect","Button","getPosts","initColumns","LayoutDNDConnectDB","state","setstate","getallPost","GetallPostzx","localStorage","getItem","success","Post_of_User","error","console","log","title","getInitColumns","getInit","getIni","onDragEnd","results"],"sources":["D:/ReactJS/DoAn_CN/my-app/src/components/LayoutConnectDB/Layout.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport { getPosts, initColumns } from \"../Dashboard/postBehavior\";\r\nconst LayoutDNDConnectDB = () => {\r\n  const [state, setstate] = useState();\r\n  const getallPost = async () => {\r\n    try {\r\n      const GetallPostzx = await getPosts(localStorage.getItem(\"token\"));\r\n      if (GetallPostzx.success) {\r\n        setstate(GetallPostzx.Post_of_User);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  let title = {\r\n    title: \"todo smthg\",\r\n  };\r\n  const getInitColumns = async () => {\r\n    try {\r\n      const getInit = await initColumns(title);\r\n      if (getInit.success) {\r\n        console.log(\"init\", getInit);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"init\", getIni);\r\n\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getallPost();\r\n    getInitColumns();\r\n  });\r\n  const onDragEnd = (results) => {};\r\n  return (\r\n    <>\r\n      <Button>init map</Button>\r\n      <div>Hello</div>\r\n      {/* <DragDropContext onDragEnd={onDragEnd}>\r\n        <div style={{ display: \"flex\" }}>\r\n          {state.columOrder.map((columID) => {\r\n            const colum = state.colums[columID];\r\n            const tasks = colum.taskIds.map((taskIds) => state.tasks[taskIds]);\r\n            return (\r\n              <Column key={colum.id} column={colum} tasks={tasks}></Column>\r\n            );\r\n          })}\r\n        </div>\r\n      </DragDropContext> */}\r\n    </>\r\n  );\r\n};\r\nexport default LayoutDNDConnectDB;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,2BAAtC;;;;AACA,MAAMC,kBAAkB,GAAG,MAAM;EAAA;;EAC/B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;;EACA,MAAMQ,UAAU,GAAG,YAAY;IAC7B,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMN,QAAQ,CAACO,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAnC;;MACA,IAAIF,YAAY,CAACG,OAAjB,EAA0B;QACxBL,QAAQ,CAACE,YAAY,CAACI,YAAd,CAAR;MACD;IACF,CALD,CAKE,OAAOC,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD;EACF,CATD;;EAUA,IAAIG,KAAK,GAAG;IACVA,KAAK,EAAE;EADG,CAAZ;;EAGA,MAAMC,cAAc,GAAG,YAAY;IACjC,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMf,WAAW,CAACa,KAAD,CAAjC;;MACA,IAAIE,OAAO,CAACP,OAAZ,EAAqB;QACnBG,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBG,OAApB;MACD;IACF,CALD,CAKE,OAAOL,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBI,MAApB;IAED;EACF,CAVD;;EAYAnB,SAAS,CAAC,MAAM;IACdO,UAAU;IACVU,cAAc;EACf,CAHQ,CAAT;;EAIA,MAAMG,SAAS,GAAIC,OAAD,IAAa,CAAE,CAAjC;;EACA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAiBD,CAjDD;;GAAMjB,kB;;KAAAA,kB;AAkDN,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}