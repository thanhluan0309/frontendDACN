{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\DoAn_CN\\\\my-app\\\\src\\\\components\\\\Layout\\\\LayoutGrid.js\",\n    _s = $RefreshSig$();\n\nimport { Responsive as ResponsiveGridLayout } from \"react-grid-layout\";\nimport GridLayout from \"react-grid-layout\";\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport \"./style.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ReactGridLayout = WidthProvider(RGL);\n_c = ReactGridLayout;\nexport const Layoutgrid = () => {\n  _s();\n\n  // {lg: layout1, md: layout2, ...}\n  const [collum, setcollum] = useState(1);\n  const [rows, setrows] = useState(200);\n  const [layout1, setlayout1] = useState({\n    layout: []\n  });\n  const [layout2, setlayout2] = useState({\n    layout: []\n  });\n  const defaultProps = {\n    className: \"layout\",\n    rowHeight: 30,\n    onLayoutChange: function () {}\n  };\n\n  const onLayoutChange = layout => {\n    setlayout1({\n      layout\n    });\n  };\n\n  const onLayoutChange2 = layout => {\n    setlayout2({\n      layout\n    });\n  };\n\n  const layoutvc = [{\n    i: \"a\",\n    x: 0,\n    y: 0,\n    w: 3,\n    h: 1\n  }, {\n    i: \"b\",\n    x: 1,\n    y: 2,\n    w: 3,\n    h: 1\n  }, {\n    i: \"c\",\n    x: 4,\n    y: 0,\n    w: 3,\n    h: 1\n  }];\n  useEffect(() => {\n    console.log(\"layout\", layout1);\n    console.log(collum);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setcollum(collum + 1);\n          setrows(rows + 200);\n        },\n        children: \"Add collum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactGridLayout, { ...defaultProps,\n        layout: layout1.layout,\n        cols: {\n          lg: 12,\n          md: 10,\n          sm: 6,\n          xs: 4,\n          xxs: 2\n        },\n        rowHeight: 400,\n        onLayoutChange: onLayoutChange,\n        children: layoutvc.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CssforItem_layout\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text\",\n            children: item.i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, item.i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Layoutgrid, \"EkAd4EMWPBQIMITz5NiHVbdAnzA=\");\n\n_c2 = Layoutgrid;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReactGridLayout\");\n$RefreshReg$(_c2, \"Layoutgrid\");","map":{"version":3,"names":["Responsive","ResponsiveGridLayout","GridLayout","RGL","WidthProvider","useEffect","useState","ReactGridLayout","Layoutgrid","collum","setcollum","rows","setrows","layout1","setlayout1","layout","layout2","setlayout2","defaultProps","className","rowHeight","onLayoutChange","onLayoutChange2","layoutvc","i","x","y","w","h","console","log","lg","md","sm","xs","xxs","map","item"],"sources":["D:/ReactJS/DoAn_CN/my-app/src/components/Layout/LayoutGrid.js"],"sourcesContent":["import { Responsive as ResponsiveGridLayout } from \"react-grid-layout\";\r\nimport GridLayout from \"react-grid-layout\";\r\nimport RGL, { WidthProvider } from \"react-grid-layout\";\r\nimport \"./style.css\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nconst ReactGridLayout = WidthProvider(RGL);\r\nexport const Layoutgrid = () => {\r\n  // {lg: layout1, md: layout2, ...}\r\n  const [collum, setcollum] = useState(1);\r\n  const [rows, setrows] = useState(200);\r\n  const [layout1, setlayout1] = useState({\r\n    layout: [],\r\n  });\r\n  const [layout2, setlayout2] = useState({\r\n    layout: [],\r\n  });\r\n  const defaultProps = {\r\n    className: \"layout\",\r\n    rowHeight: 30,\r\n    onLayoutChange: function () {},\r\n  };\r\n  const onLayoutChange = (layout) => {\r\n    setlayout1({ layout });\r\n  };\r\n\r\n  const onLayoutChange2 = (layout) => {\r\n    setlayout2({ layout });\r\n  };\r\n\r\n  const layoutvc = [\r\n    { i: \"a\", x: 0, y: 0, w: 3, h: 1 },\r\n    { i: \"b\", x: 1, y: 2, w: 3, h: 1 },\r\n    { i: \"c\", x: 4, y: 0, w: 3, h: 1 },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    console.log(\"layout\", layout1);\r\n    console.log(collum);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            setcollum(collum + 1);\r\n            setrows(rows + 200);\r\n          }}\r\n        >\r\n          Add collum\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <ReactGridLayout\r\n          {...defaultProps}\r\n          layout={layout1.layout}\r\n          cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\r\n          rowHeight={400}\r\n          onLayoutChange={onLayoutChange}\r\n        >\r\n          {layoutvc.map((item) => (\r\n            <div className=\"CssforItem_layout\" key={item.i}>\r\n              <span className=\"text\">{item.i}</span>\r\n            </div>\r\n          ))}\r\n        </ReactGridLayout>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}