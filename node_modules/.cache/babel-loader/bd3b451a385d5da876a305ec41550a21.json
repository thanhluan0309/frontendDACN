{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\DoAn_CN\\\\my-app\\\\src\\\\components\\\\Protectedroute\\\\PostContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer, useState } from \"react\";\nimport { postReducer } from \"../reducers/postReducer\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostContext = /*#__PURE__*/createContext();\n\nconst PostContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // State\n  const [postState, dispatch] = useReducer(postReducer, {\n    post: null,\n    posts: [],\n    postsLoading: true\n  }); // const [showAddPostModal, setShowAddPostModal] = useState(false)\n  // const [showUpdatePostModal, setShowUpdatePostModal] = useState(false)\n  // const [showToast, setShowToast] = useState({\n  // \tshow: false,\n  // \tmessage: '',\n  // \ttype: null\n  // })\n  // Get all posts\n\n  const getPosts = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8080/Post/\");\n\n      if (response.data.success) {\n        dispatch({\n          type: \"POSTS_LOADED_SUCCESS\",\n          payload: response.data.posts\n        });\n      }\n    } catch (error) {\n      return error.response.data ? error.response.data : {\n        success: false,\n        message: \"Server error\"\n      };\n    }\n  }; // Add post\n  // const addPost = async newPost => {\n  // \ttry {\n  // \t\tconst response = await axios.post(`${apiUrl}/posts`, newPost)\n  // \t\tif (response.data.success) {\n  // \t\t\tdispatch({ type: ADD_POST, payload: response.data.post })\n  // \t\t\treturn response.data\n  // \t\t}\n  // \t} catch (error) {\n  // \t\treturn error.response.data\n  // \t\t\t? error.response.data\n  // \t\t\t: { success: false, message: 'Server error' }\n  // \t}\n  // }\n  // // Delete post\n  // const deletePost = async postId => {\n  // \ttry {\n  // \t\tconst response = await axios.delete(`${apiUrl}/posts/${postId}`)\n  // \t\tif (response.data.success)\n  // \t\t\tdispatch({ type: DELETE_POST, payload: postId })\n  // \t} catch (error) {\n  // \t\tconsole.log(error)\n  // \t}\n  // }\n  // // Find post when user is updating post\n  // const findPost = postId => {\n  // \tconst post = postState.posts.find(post => post._id === postId)\n  // \tdispatch({ type: FIND_POST, payload: post })\n  // }\n  // // Update post\n  // const updatePost = async updatedPost => {\n  // \ttry {\n  // \t\tconst response = await axios.put(\n  // \t\t\t`${apiUrl}/posts/${updatedPost._id}`,\n  // \t\t\tupdatedPost\n  // \t\t)\n  // \t\tif (response.data.success) {\n  // \t\t\tdispatch({ type: UPDATE_POST, payload: response.data.post })\n  // \t\t\treturn response.data\n  // \t\t}\n  // \t} catch (error) {\n  // \t\treturn error.response.data\n  // \t\t\t? error.response.data\n  // \t\t\t: { success: false, message: 'Server error' }\n  // \t}\n  // }\n  // Post context data\n\n\n  const postContextData = {\n    // postState,\n    // getPosts,\n    // showAddPostModal,\n    // setShowAddPostModal,\n    // showUpdatePostModal,\n    // setShowUpdatePostModal,\n    // addPost,\n    // showToast,\n    // setShowToast,\n    // deletePost,\n    // findPost,\n    // updatePost\n    getPosts,\n    postState\n  };\n  return /*#__PURE__*/_jsxDEV(PostContext.Provider, {\n    value: postContextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostContextProvider, \"JX3ZMEcveiCpnlpuJeHnCan1DL4=\");\n\n_c = PostContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostContextProvider\");","map":{"version":3,"names":["createContext","useReducer","useState","postReducer","axios","PostContext","PostContextProvider","children","postState","dispatch","post","posts","postsLoading","getPosts","response","get","data","success","type","payload","error","message","postContextData"],"sources":["D:/ReactJS/DoAn_CN/my-app/src/components/Protectedroute/PostContext.js"],"sourcesContent":["import { createContext, useReducer, useState } from \"react\";\r\nimport { postReducer } from \"../reducers/postReducer\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const PostContext = createContext();\r\n\r\nconst PostContextProvider = ({ children }) => {\r\n  // State\r\n  const [postState, dispatch] = useReducer(postReducer, {\r\n    post: null,\r\n    posts: [],\r\n    postsLoading: true,\r\n  });\r\n\r\n  // const [showAddPostModal, setShowAddPostModal] = useState(false)\r\n  // const [showUpdatePostModal, setShowUpdatePostModal] = useState(false)\r\n  // const [showToast, setShowToast] = useState({\r\n  // \tshow: false,\r\n  // \tmessage: '',\r\n  // \ttype: null\r\n  // })\r\n\r\n  // Get all posts\r\n  const getPosts = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8080/Post/\");\r\n      if (response.data.success) {\r\n        dispatch({\r\n          type: \"POSTS_LOADED_SUCCESS\",\r\n          payload: response.data.posts,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return error.response.data\r\n        ? error.response.data\r\n        : { success: false, message: \"Server error\" };\r\n    }\r\n  };\r\n\r\n  // Add post\r\n  // const addPost = async newPost => {\r\n  // \ttry {\r\n  // \t\tconst response = await axios.post(`${apiUrl}/posts`, newPost)\r\n  // \t\tif (response.data.success) {\r\n  // \t\t\tdispatch({ type: ADD_POST, payload: response.data.post })\r\n  // \t\t\treturn response.data\r\n  // \t\t}\r\n  // \t} catch (error) {\r\n  // \t\treturn error.response.data\r\n  // \t\t\t? error.response.data\r\n  // \t\t\t: { success: false, message: 'Server error' }\r\n  // \t}\r\n  // }\r\n\r\n  // // Delete post\r\n  // const deletePost = async postId => {\r\n  // \ttry {\r\n  // \t\tconst response = await axios.delete(`${apiUrl}/posts/${postId}`)\r\n  // \t\tif (response.data.success)\r\n  // \t\t\tdispatch({ type: DELETE_POST, payload: postId })\r\n  // \t} catch (error) {\r\n  // \t\tconsole.log(error)\r\n  // \t}\r\n  // }\r\n\r\n  // // Find post when user is updating post\r\n  // const findPost = postId => {\r\n  // \tconst post = postState.posts.find(post => post._id === postId)\r\n  // \tdispatch({ type: FIND_POST, payload: post })\r\n  // }\r\n\r\n  // // Update post\r\n  // const updatePost = async updatedPost => {\r\n  // \ttry {\r\n  // \t\tconst response = await axios.put(\r\n  // \t\t\t`${apiUrl}/posts/${updatedPost._id}`,\r\n  // \t\t\tupdatedPost\r\n  // \t\t)\r\n  // \t\tif (response.data.success) {\r\n  // \t\t\tdispatch({ type: UPDATE_POST, payload: response.data.post })\r\n  // \t\t\treturn response.data\r\n  // \t\t}\r\n  // \t} catch (error) {\r\n  // \t\treturn error.response.data\r\n  // \t\t\t? error.response.data\r\n  // \t\t\t: { success: false, message: 'Server error' }\r\n  // \t}\r\n  // }\r\n\r\n  // Post context data\r\n  const postContextData = {\r\n    // postState,\r\n    // getPosts,\r\n    // showAddPostModal,\r\n    // setShowAddPostModal,\r\n    // showUpdatePostModal,\r\n    // setShowUpdatePostModal,\r\n    // addPost,\r\n    // showToast,\r\n    // setShowToast,\r\n    // deletePost,\r\n    // findPost,\r\n    // updatePost\r\n\r\n    getPosts,\r\n    postState,\r\n  };\r\n\r\n  return (\r\n    <PostContext.Provider value={postContextData}>\r\n      {children}\r\n    </PostContext.Provider>\r\n  );\r\n};\r\n "],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,EAAjC;;AAEP,MAAMM,mBAAmB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC5C;EACA,MAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBR,UAAU,CAACE,WAAD,EAAc;IACpDO,IAAI,EAAE,IAD8C;IAEpDC,KAAK,EAAE,EAF6C;IAGpDC,YAAY,EAAE;EAHsC,CAAd,CAAxC,CAF4C,CAQ5C;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EACA,MAAMC,QAAQ,GAAG,YAAY;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,6BAAV,CAAvB;;MACA,IAAID,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;QACzBR,QAAQ,CAAC;UACPS,IAAI,EAAE,sBADC;UAEPC,OAAO,EAAEL,QAAQ,CAACE,IAAT,CAAcL;QAFhB,CAAD,CAAR;MAID;IACF,CARD,CAQE,OAAOS,KAAP,EAAc;MACd,OAAOA,KAAK,CAACN,QAAN,CAAeE,IAAf,GACHI,KAAK,CAACN,QAAN,CAAeE,IADZ,GAEH;QAAEC,OAAO,EAAE,KAAX;QAAkBI,OAAO,EAAE;MAA3B,CAFJ;IAGD;EACF,CAdD,CAjB4C,CAiC5C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;;EACA,MAAMC,eAAe,GAAG;IACtB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEAT,QAdsB;IAetBL;EAfsB,CAAxB;EAkBA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEc,eAA7B;IAAA,UACGf;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA3GD;;GAAMD,mB;;KAAAA,mB"},"metadata":{},"sourceType":"module"}