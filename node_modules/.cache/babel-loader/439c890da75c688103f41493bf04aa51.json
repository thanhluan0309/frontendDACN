{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\DoAn_CN\\\\my-app\\\\src\\\\components\\\\LayoutConnectDB\\\\Layout.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { getOneColums } from \"../Dashboard/postBehavior\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ModalAddColumn } from \"./LayoutDBhandle\";\nimport { getPosts, initColumns, updateColumns, getAllColumns, getOneColumsByidBody, DeletedColumns_ByID } from \"../Dashboard/postBehavior\";\nimport \"./style.css\";\nimport Column from \"./Column\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LayoutDNDConnectDB = () => {\n  _s();\n\n  const [state, setstate] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const nav = useNavigate();\n  let Post;\n\n  const getallPost = async () => {\n    try {\n      const GetallPostzx = await getPosts(localStorage.getItem(\"token\"));\n\n      if (GetallPostzx.success) {\n        setstate(GetallPostzx.Post_of_User);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  let title = {\n    id: `idInit${localStorage.getItem(\"username\")}`,\n    title: \"Process\"\n  };\n\n  const updateColumnsWhenHandle = async e => {\n    await updateColumns(e);\n  };\n\n  const updatecolumnsinit = async () => {\n    console.log(\"state\", state);\n    let UpdateInit = {\n      _id: localStorage.getItem(\"IDinitColumns\"),\n      taskIds: []\n    };\n\n    for (let index = 0; index < state.length; index++) {\n      UpdateInit.taskIds.push(state[index]._id);\n    }\n\n    await updateColumns(UpdateInit);\n  };\n\n  const GetallCol = async () => {\n    const gAllCol = await (await getAllColumns()).data.getALlCol;\n    setColumns(gAllCol);\n  };\n\n  const getInitColumns = async () => {\n    autorun();\n\n    if (localStorage.getItem(\"IDinitColumns\") !== null) {\n      DeltedById(localStorage.getItem(\"IDinitColumns\"));\n    }\n\n    const getInit = await initColumns(title);\n    localStorage.setItem(\"IDinitColumns\", getInit.data.newcolumns._id);\n    updatecolumnsinit();\n  };\n\n  const DeltedById = async id => {\n    await DeletedColumns_ByID(id);\n    autorun();\n  };\n\n  const autorun = () => {\n    for (let index = 0; index < 5; index++) {\n      GetallCol();\n      getallPost();\n    }\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\") === null) {\n      return nav(\"/login\");\n    }\n  });\n\n  const checkValidColumninit = async e => {\n    const res = await getOneColumsByidBody(e);\n    return res.OneColumns.taskIds[0];\n    console.log(\"res\", res.OneColumns.taskIds[0]);\n  };\n\n  window.onload = function () {\n    checkValidColumninit(title);\n    autorun();\n  };\n\n  const getOneColumsByid = async id => {\n    const getColumns = await getOneColums(id);\n    return getColumns.OneColumns;\n  };\n\n  const onDragEnd = async results => {\n    autorun();\n    const {\n      destination,\n      draggableId,\n      source\n    } = results;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    let startPromise = getOneColumsByid(source.droppableId);\n    let finishPromise = getOneColumsByid(destination.droppableId);\n    let starts = {};\n    let finishs = {};\n    startPromise.then(function (result) {\n      starts = { ...result\n      };\n      finishPromise.then(function (result) {\n        finishs = { ...result\n        };\n\n        if (starts._id === finishs._id) {\n          const newTaskID = Array.from(starts.taskIds);\n          newTaskID[0].splice(source.index, 1);\n          newTaskID[0].splice(destination.index, 0, draggableId);\n          const newcolumn = { ...starts,\n            taskIds: newTaskID[0]\n          };\n          updateColumnsWhenHandle(newcolumn);\n          return;\n        } else {\n          const finishtaskID = Array.from(finishs.taskIds);\n\n          if (finishtaskID[0] === undefined) {\n            finishtaskID[0] = [];\n          }\n\n          finishtaskID[0].splice(destination.index, 0, draggableId);\n          const newfinish = { ...finishs,\n            taskIds: finishtaskID[0]\n          };\n          const starttaskID = Array.from(starts.taskIds);\n          starttaskID[0].splice(source.index, 1);\n          const newstart = { ...starts,\n            taskIds: starttaskID[0]\n          };\n          updateColumnsWhenHandle(newstart);\n          updateColumnsWhenHandle(newfinish);\n          return;\n        }\n      });\n    });\n  };\n\n  const [addColumnsForm, setaddColumnsForm] = useState({\n    title: \"\"\n  });\n\n  const handleChangeFormAddColumns = event => {\n    setaddColumnsForm({ ...addColumnsForm,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const CreateNewColumn = async () => {\n    const req = await initColumns(addColumnsForm);\n    autorun();\n    return req;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          style: {\n            opacity: \"0.8\",\n            height: \"136%\"\n          },\n          className: \"navbar navbar-expand-lg navbar-dark bg-dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"navbar-brand\",\n            href: \"#\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://cdn-icons-png.flaticon.com/512/3209/3209265.png\",\n              width: \"30\",\n              height: \"30\",\n              className: \"d-inline-block align-top\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), \"Smart-note\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"navbar-toggler\",\n            type: \"button\",\n            \"data-toggle\": \"collapse\",\n            \"data-target\": \"#my-nav-bar\",\n            \"aria-controls\": \"my-nav-bar\",\n            \"aria-expanded\": \"false\",\n            \"aria-label\": \"Toggle navigation\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"navbar-toggler-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collapse navbar-collapse\",\n            id: \"my-nav-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"navbar-nav\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"nav-item active\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: getInitColumns,\n                  children: \"Init map\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"nav-item\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  style: {\n                    width: \"100%\",\n                    marginLeft: \"20px\"\n                  },\n                  href: \"/Dashboard\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"nav-item\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  style: {\n                    marginLeft: \"20px\"\n                  },\n                  className: \"btn btn-primary\",\n                  \"data-bs-toggle\": \"modal\",\n                  \"data-bs-target\": \"#exampleModal\",\n                  \"data-bs-whatever\": \"@mdo\",\n                  children: \"Create new Column\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"nav-item\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  style: {\n                    marginLeft: \"20px\"\n                  },\n                  className: \"btn btn-primary\",\n                  \"data-bs-toggle\": \"modal\",\n                  \"data-bs-target\": \"#exampleModal\",\n                  \"data-bs-whatever\": \"@mdo\",\n                  children: \"Reset all\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalAddColumn, {\n      addColumnsForm: addColumnsForm,\n      handleChangeFormAddColumns: handleChangeFormAddColumns,\n      CreateNewColumn: CreateNewColumn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: columns && columns.map((columID, index) => {\n          const colum = columns[index];\n          const task = colum.taskIds.map((taskIds, index) => colum.taskIds[index]);\n\n          if (task[0] === undefined) {\n            const lay = [];\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Column\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Column-navbar\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-warning mt-1\",\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    children: [\" \", colum.title]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      DeltedById(colum._id);\n                    },\n                    className: \"btn btn-danger mt-1\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Column-Body\",\n                  children: /*#__PURE__*/_jsxDEV(Column, {\n                    column: colum,\n                    tasks: lay\n                  }, colum._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          } else {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Column\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Column-navbar\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-warning mt-1\",\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    children: [\" \", colum.title]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      DeltedById(colum._id);\n                    },\n                    className: \"btn btn-danger mt-1\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Column-Body\",\n                  children: /*#__PURE__*/_jsxDEV(Column, {\n                    column: colum,\n                    tasks: task[0]\n                  }, colum._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LayoutDNDConnectDB, \"H3oiBE/QWip9A6YD96WlhZvf41w=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LayoutDNDConnectDB;\nexport default LayoutDNDConnectDB;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutDNDConnectDB\");","map":{"version":3,"names":["useState","useEffect","Button","DragDropContext","getOneColums","useNavigate","ModalAddColumn","getPosts","initColumns","updateColumns","getAllColumns","getOneColumsByidBody","DeletedColumns_ByID","Column","LayoutDNDConnectDB","state","setstate","columns","setColumns","nav","Post","getallPost","GetallPostzx","localStorage","getItem","success","Post_of_User","error","console","log","title","id","updateColumnsWhenHandle","e","updatecolumnsinit","UpdateInit","_id","taskIds","index","length","push","GetallCol","gAllCol","data","getALlCol","getInitColumns","autorun","DeltedById","getInit","setItem","newcolumns","checkValidColumninit","res","OneColumns","window","onload","getOneColumsByid","getColumns","onDragEnd","results","destination","draggableId","source","droppableId","startPromise","finishPromise","starts","finishs","then","result","newTaskID","Array","from","splice","newcolumn","finishtaskID","undefined","newfinish","starttaskID","newstart","addColumnsForm","setaddColumnsForm","handleChangeFormAddColumns","event","target","name","value","CreateNewColumn","req","opacity","height","width","marginLeft","display","map","columID","colum","task","lay"],"sources":["D:/ReactJS/DoAn_CN/my-app/src/components/LayoutConnectDB/Layout.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport { getOneColums } from \"../Dashboard/postBehavior\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ModalAddColumn } from \"./LayoutDBhandle\";\r\nimport {\r\n  getPosts,\r\n  initColumns,\r\n  updateColumns,\r\n  getAllColumns,\r\n  getOneColumsByidBody,\r\n  DeletedColumns_ByID,\r\n} from \"../Dashboard/postBehavior\";\r\nimport \"./style.css\";\r\nimport Column from \"./Column\";\r\nconst LayoutDNDConnectDB = () => {\r\n  const [state, setstate] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const nav = useNavigate();\r\n  let Post;\r\n  const getallPost = async () => {\r\n    try {\r\n      const GetallPostzx = await getPosts(localStorage.getItem(\"token\"));\r\n      if (GetallPostzx.success) {\r\n        setstate(GetallPostzx.Post_of_User);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  let title = {\r\n    id: `idInit${localStorage.getItem(\"username\")}`,\r\n    title: \"Process\",\r\n  };\r\n\r\n  const updateColumnsWhenHandle = async (e) => {\r\n    await updateColumns(e);\r\n  };\r\n  const updatecolumnsinit = async () => {\r\n    console.log(\"state\", state);\r\n    let UpdateInit = {\r\n      _id: localStorage.getItem(\"IDinitColumns\"),\r\n      taskIds: [],\r\n    };\r\n    for (let index = 0; index < state.length; index++) {\r\n      UpdateInit.taskIds.push(state[index]._id);\r\n    }\r\n    await updateColumns(UpdateInit);\r\n  };\r\n\r\n  const GetallCol = async () => {\r\n    const gAllCol = await (await getAllColumns()).data.getALlCol;\r\n    setColumns(gAllCol);\r\n  };\r\n\r\n  const getInitColumns = async () => {\r\n    autorun();\r\n\r\n    if (localStorage.getItem(\"IDinitColumns\") !== null) {\r\n      DeltedById(localStorage.getItem(\"IDinitColumns\"));\r\n    }\r\n    const getInit = await initColumns(title);\r\n    localStorage.setItem(\"IDinitColumns\", getInit.data.newcolumns._id);\r\n    updatecolumnsinit();\r\n  };\r\n  const DeltedById = async (id) => {\r\n    await DeletedColumns_ByID(id);\r\n    autorun();\r\n  };\r\n  const autorun = () => {\r\n    for (let index = 0; index < 5; index++) {\r\n      GetallCol();\r\n      getallPost();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\") === null) {\r\n      return nav(\"/login\");\r\n    }\r\n  });\r\n  const checkValidColumninit = async (e) => {\r\n    const res = await getOneColumsByidBody(e);\r\n    return res.OneColumns.taskIds[0];\r\n    console.log(\"res\", res.OneColumns.taskIds[0]);\r\n  };\r\n  window.onload = function () {\r\n    checkValidColumninit(title);\r\n    autorun();\r\n  };\r\n  const getOneColumsByid = async (id) => {\r\n    const getColumns = await getOneColums(id);\r\n    return getColumns.OneColumns;\r\n  };\r\n\r\n  const onDragEnd = async (results) => {\r\n    autorun();\r\n    const { destination, draggableId, source } = results;\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    let startPromise = getOneColumsByid(source.droppableId);\r\n    let finishPromise = getOneColumsByid(destination.droppableId);\r\n    let starts = {};\r\n    let finishs = {};\r\n    startPromise.then(function (result) {\r\n      starts = {\r\n        ...result,\r\n      };\r\n      finishPromise.then(function (result) {\r\n        finishs = {\r\n          ...result,\r\n        };\r\n        if (starts._id === finishs._id) {\r\n          const newTaskID = Array.from(starts.taskIds);\r\n          newTaskID[0].splice(source.index, 1);\r\n          newTaskID[0].splice(destination.index, 0, draggableId);\r\n\r\n          const newcolumn = {\r\n            ...starts,\r\n            taskIds: newTaskID[0],\r\n          };\r\n          updateColumnsWhenHandle(newcolumn);\r\n          return;\r\n        } else {\r\n          const finishtaskID = Array.from(finishs.taskIds);\r\n\r\n          if (finishtaskID[0] === undefined) {\r\n            finishtaskID[0] = [];\r\n          }\r\n          finishtaskID[0].splice(destination.index, 0, draggableId);\r\n          const newfinish = {\r\n            ...finishs,\r\n            taskIds: finishtaskID[0],\r\n          };\r\n\r\n          const starttaskID = Array.from(starts.taskIds);\r\n          starttaskID[0].splice(source.index, 1);\r\n          const newstart = {\r\n            ...starts,\r\n            taskIds: starttaskID[0],\r\n          };\r\n\r\n          updateColumnsWhenHandle(newstart);\r\n          updateColumnsWhenHandle(newfinish);\r\n          return;\r\n        }\r\n      });\r\n    });\r\n  };\r\n  const [addColumnsForm, setaddColumnsForm] = useState({\r\n    title: \"\",\r\n  });\r\n  const handleChangeFormAddColumns = (event) => {\r\n    setaddColumnsForm({\r\n      ...addColumnsForm,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const CreateNewColumn = async () => {\r\n    const req = await initColumns(addColumnsForm);\r\n    autorun();\r\n    return req;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <nav\r\n            style={{ opacity: \"0.8\", height: \"136%\" }}\r\n            className=\"navbar navbar-expand-lg navbar-dark bg-dark\"\r\n          >\r\n            <a className=\"navbar-brand\" href=\"#\">\r\n              <img\r\n                src=\"https://cdn-icons-png.flaticon.com/512/3209/3209265.png\"\r\n                width=\"30\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n                alt=\"\"\r\n              />\r\n              Smart-note\r\n            </a>\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#my-nav-bar\"\r\n              aria-controls=\"my-nav-bar\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"my-nav-bar\">\r\n              <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item active\">\r\n                  <Button onClick={getInitColumns}>Init map</Button>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <a\r\n                    style={{ width: \"100%\", marginLeft: \"20px\" }}\r\n                    href=\"/Dashboard\"\r\n                  >\r\n                    <Button>Back</Button>\r\n                  </a>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <Button\r\n                    type=\"button\"\r\n                    style={{ marginLeft: \"20px\" }}\r\n                    className=\"btn btn-primary\"\r\n                    data-bs-toggle=\"modal\"\r\n                    data-bs-target=\"#exampleModal\"\r\n                    data-bs-whatever=\"@mdo\"\r\n                  >\r\n                    Create new Column\r\n                  </Button>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Button\r\n                    type=\"button\"\r\n                    style={{ marginLeft: \"20px\" }}\r\n                    className=\"btn btn-primary\"\r\n                    data-bs-toggle=\"modal\"\r\n                    data-bs-target=\"#exampleModal\"\r\n                    data-bs-whatever=\"@mdo\"\r\n                  >\r\n                    Reset all\r\n                  </Button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n\r\n      <ModalAddColumn\r\n        addColumnsForm={addColumnsForm}\r\n        handleChangeFormAddColumns={handleChangeFormAddColumns}\r\n        CreateNewColumn={CreateNewColumn}\r\n      ></ModalAddColumn>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div style={{ display: \"flex\" }}>\r\n          {columns &&\r\n            columns.map((columID, index) => {\r\n              const colum = columns[index];\r\n              const task = colum.taskIds.map(\r\n                (taskIds, index) => colum.taskIds[index]\r\n              );\r\n              if (task[0] === undefined) {\r\n                const lay = [];\r\n                return (\r\n                  <>\r\n                    <div className=\"Column\">\r\n                      <div className=\"Column-navbar\">\r\n                        <button type=\"button\" className=\"btn btn-warning mt-1\">\r\n                          Edit\r\n                        </button>\r\n                        <h5 className=\"card-title\"> {colum.title}</h5>\r\n                        <Button\r\n                          onClick={() => {\r\n                            DeltedById(colum._id);\r\n                          }}\r\n                          className=\"btn btn-danger mt-1\"\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </div>\r\n                      <div className=\"Column-Body\">\r\n                        <Column\r\n                          key={colum._id}\r\n                          column={colum}\r\n                          tasks={lay}\r\n                        ></Column>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                );\r\n              } else {\r\n                return (\r\n                  <>\r\n                    <div className=\"Column\">\r\n                      <div className=\"Column-navbar\">\r\n                        <button type=\"button\" className=\"btn btn-warning mt-1\">\r\n                          Edit\r\n                        </button>\r\n                        <h5 className=\"card-title\"> {colum.title}</h5>\r\n                        <Button\r\n                          onClick={() => {\r\n                            DeltedById(colum._id);\r\n                          }}\r\n                          className=\"btn btn-danger mt-1\"\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </div>\r\n                      <div className=\"Column-Body\">\r\n                        <Column\r\n                          key={colum._id}\r\n                          column={colum}\r\n                          tasks={task[0]}\r\n                        ></Column>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                );\r\n              }\r\n            })}\r\n        </div>\r\n      </DragDropContext>\r\n    </>\r\n  );\r\n};\r\nexport default LayoutDNDConnectDB;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}