{"ast":null,"code":"'use strict';\n\nconst stream = require('stream');\n\nconst Transform = stream.Transform;\n/**\n * Ensures that only <LF> is used for linebreaks\n *\n * @param {Object} options Stream options\n */\n\nclass LeWindows extends Transform {\n  constructor(options) {\n    super(options); // init Transform\n\n    this.options = options || {};\n  }\n  /**\n   * Escapes dots\n   */\n\n\n  _transform(chunk, encoding, done) {\n    let buf;\n    let lastPos = 0;\n\n    for (let i = 0, len = chunk.length; i < len; i++) {\n      if (chunk[i] === 0x0d) {\n        // \\n\n        buf = chunk.slice(lastPos, i);\n        lastPos = i + 1;\n        this.push(buf);\n      }\n    }\n\n    if (lastPos && lastPos < chunk.length) {\n      buf = chunk.slice(lastPos);\n      this.push(buf);\n    } else if (!lastPos) {\n      this.push(chunk);\n    }\n\n    done();\n  }\n\n}\n\nmodule.exports = LeWindows;","map":{"version":3,"names":["stream","require","Transform","LeWindows","constructor","options","_transform","chunk","encoding","done","buf","lastPos","i","len","length","slice","push","module","exports"],"sources":["D:/ReactJS/DoAn_CN/my-app/node_modules/nodemailer/lib/mime-node/le-unix.js"],"sourcesContent":["'use strict';\n\nconst stream = require('stream');\nconst Transform = stream.Transform;\n\n/**\n * Ensures that only <LF> is used for linebreaks\n *\n * @param {Object} options Stream options\n */\nclass LeWindows extends Transform {\n    constructor(options) {\n        super(options);\n        // init Transform\n        this.options = options || {};\n    }\n\n    /**\n     * Escapes dots\n     */\n    _transform(chunk, encoding, done) {\n        let buf;\n        let lastPos = 0;\n\n        for (let i = 0, len = chunk.length; i < len; i++) {\n            if (chunk[i] === 0x0d) {\n                // \\n\n                buf = chunk.slice(lastPos, i);\n                lastPos = i + 1;\n                this.push(buf);\n            }\n        }\n        if (lastPos && lastPos < chunk.length) {\n            buf = chunk.slice(lastPos);\n            this.push(buf);\n        } else if (!lastPos) {\n            this.push(chunk);\n        }\n        done();\n    }\n}\n\nmodule.exports = LeWindows;\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,SAAS,GAAGF,MAAM,CAACE,SAAzB;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;EAC9BE,WAAW,CAACC,OAAD,EAAU;IACjB,MAAMA,OAAN,EADiB,CAEjB;;IACA,KAAKA,OAAL,GAAeA,OAAO,IAAI,EAA1B;EACH;EAED;AACJ;AACA;;;EACIC,UAAU,CAACC,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAAwB;IAC9B,IAAIC,GAAJ;IACA,IAAIC,OAAO,GAAG,CAAd;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGN,KAAK,CAACO,MAA5B,EAAoCF,CAAC,GAAGC,GAAxC,EAA6CD,CAAC,EAA9C,EAAkD;MAC9C,IAAIL,KAAK,CAACK,CAAD,CAAL,KAAa,IAAjB,EAAuB;QACnB;QACAF,GAAG,GAAGH,KAAK,CAACQ,KAAN,CAAYJ,OAAZ,EAAqBC,CAArB,CAAN;QACAD,OAAO,GAAGC,CAAC,GAAG,CAAd;QACA,KAAKI,IAAL,CAAUN,GAAV;MACH;IACJ;;IACD,IAAIC,OAAO,IAAIA,OAAO,GAAGJ,KAAK,CAACO,MAA/B,EAAuC;MACnCJ,GAAG,GAAGH,KAAK,CAACQ,KAAN,CAAYJ,OAAZ,CAAN;MACA,KAAKK,IAAL,CAAUN,GAAV;IACH,CAHD,MAGO,IAAI,CAACC,OAAL,EAAc;MACjB,KAAKK,IAAL,CAAUT,KAAV;IACH;;IACDE,IAAI;EACP;;AA7B6B;;AAgClCQ,MAAM,CAACC,OAAP,GAAiBf,SAAjB"},"metadata":{},"sourceType":"script"}