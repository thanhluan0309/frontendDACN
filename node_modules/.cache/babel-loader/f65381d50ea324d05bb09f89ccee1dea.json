{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\DoAn_CN\\\\my-app\\\\src\\\\components\\\\Login\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { RegisterUser } from \"./UserBehavior\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [alert, setAlert] = useState();\n\n  let body = /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"alert alert-danger\",\n    role: \"alert\",\n    children: \"A simple danger alert\\u2014check it out!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n\n  let nav = useNavigate();\n  const [formRegister, changeRegister] = useState({\n    username: \"\",\n    password: \"\",\n    repassword: \"\"\n  });\n\n  const handleRegister = event => {\n    changeRegister({ ...formRegister,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const register = async () => {\n    try {\n      const registerUser = await RegisterUser(formRegister);\n\n      if (registerUser.success) {\n        return nav(\"/login\");\n      } else {\n        setAlert({\n          body\n        });\n      }\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: register,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"username\",\n          onChange: handleRegister,\n          value: formRegister.username,\n          type: \"text\",\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"We'll never share your email with anyone else.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"password\",\n          onChange: handleRegister,\n          value: formRegister.password,\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Re-Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"repassword\",\n          onChange: handleRegister,\n          value: formRegister.repassword,\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicCheckbox\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: \"Check me out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: register,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Register, \"B4lBx7GajJhI0LHg6cza99b7qIA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Button","Form","useNavigate","Link","useState","RegisterUser","Register","alert","setAlert","body","nav","formRegister","changeRegister","username","password","repassword","handleRegister","event","target","name","value","register","registerUser","success","error","console","log","response"],"sources":["D:/ReactJS/DoAn_CN/my-app/src/components/Login/Register.js"],"sourcesContent":["import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { RegisterUser } from \"./UserBehavior\";\r\nconst Register = () => {\r\n  const [alert,setAlert] = useState();\r\n\r\n  let body = (\r\n    <div class=\"alert alert-danger\" role=\"alert\">\r\n      A simple danger alertâ€”check it out!\r\n    </div>\r\n  );\r\n\r\n  let nav = useNavigate();\r\n  const [formRegister, changeRegister] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    repassword: \"\",\r\n  });\r\n  const handleRegister = (event) => {\r\n    changeRegister({\r\n      ...formRegister,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const register = async () => {\r\n    try {\r\n      const registerUser = await RegisterUser(formRegister);\r\n      if (registerUser.success) {\r\n        return nav(\"/login\");\r\n      }else{\r\n        setAlert({body})\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h1>Register</h1>\r\n      <Form onSubmit={register}>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>username</Form.Label>\r\n          <Form.Control\r\n            name=\"username\"\r\n            onChange={handleRegister}\r\n            value={formRegister.username}\r\n            type=\"text\"\r\n            placeholder=\"Enter email\"\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            name=\"password\"\r\n            onChange={handleRegister}\r\n            value={formRegister.password}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Re-Password</Form.Label>\r\n          <Form.Control\r\n            name=\"repassword\"\r\n            onChange={handleRegister}\r\n            value={formRegister.repassword}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n          <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n        </Form.Group>\r\n        <Link to=\"/register\">\r\n          <Button>register</Button>\r\n        </Link>\r\n        <Button onClick={register}>Submit</Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}