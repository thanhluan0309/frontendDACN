{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\DoAn_CN\\\\my-app\\\\src\\\\components\\\\Layout\\\\LayoutDND.js\",\n    _s = $RefreshSig$();\n\nimport initData from \"./Data\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Column from \"./Column\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LayoutDND = () => {\n  _s();\n\n  const [state, setstate] = useState(initData);\n\n  const onDragEnd = results => {\n    const {\n      destination,\n      draggableId,\n      source\n    } = results;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    const start = state.colums[source.droppableId];\n    const finish = state.colums[destination.droppableId];\n    console.log(\"Start\", start);\n    console.log(\"finish\", finish);\n\n    if (start === finish) {\n      const newTaskID = Array.from(start.taskIds);\n      newTaskID.splice(source.index, 1);\n      newTaskID.splice(destination.index, 0, draggableId);\n      const newcolumn = { ...start,\n        taskIds: newTaskID\n      };\n      const newstate = { ...state,\n        colums: { ...state.colums,\n          [newcolumn.id]: newcolumn\n        }\n      };\n      console.log(\"Result start == finish\", results);\n      setstate(newstate);\n      console.log(\"rs\", results);\n      return;\n    }\n\n    const starttaskID = Array.from(start.taskIds);\n    starttaskID.splice(source.index, 1);\n    const newstart = { ...start,\n      taskIds: starttaskID\n    };\n    const finishtaskID = Array.from(finish.taskIds);\n    finishtaskID.splice(destination.index, 0, draggableId);\n    const newfinish = { ...finish,\n      taskIds: finishtaskID\n    };\n    const newstate = { ...state,\n      colums: { ...state.colums,\n        [newstart.id]: newstart,\n        [newfinish.id]: newfinish\n      }\n    };\n    console.log(\"Result\", results);\n    setstate(newstate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(\"state\", state), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: state.columOrder.map((columID, index) => {\n          const colum = state.colums[columID]; // console.log(\"colum,index\", colum, index);\n\n          const tasks = colum.taskIds.map(taskIds => state.tasks[taskIds]); // console.log(\"task\", tasks);\n\n          return /*#__PURE__*/_jsxDEV(Column, {\n            column: colum,\n            tasks: tasks\n          }, colum.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LayoutDND, \"SSb1bDK8tUM0uUtv27BzW0fetL4=\");\n\n_c = LayoutDND;\nexport default LayoutDND;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutDND\");","map":{"version":3,"names":["initData","DragDropContext","Column","useState","styled","LayoutDND","state","setstate","onDragEnd","results","destination","draggableId","source","droppableId","index","start","colums","finish","console","log","newTaskID","Array","from","taskIds","splice","newcolumn","newstate","id","starttaskID","newstart","finishtaskID","newfinish","display","columOrder","map","columID","colum","tasks"],"sources":["D:/ReactJS/DoAn_CN/my-app/src/components/Layout/LayoutDND.js"],"sourcesContent":["import initData from \"./Data\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport Column from \"./Column\";\r\nimport { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nconst LayoutDND = () => {\r\n  const [state, setstate] = useState(initData);\r\n\r\n  const onDragEnd = (results) => {\r\n    const { destination, draggableId, source } = results;\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n    const start = state.colums[source.droppableId];\r\n    const finish = state.colums[destination.droppableId];\r\n\r\n    console.log(\"Start\", start);\r\n    console.log(\"finish\", finish);\r\n\r\n    if (start === finish) {\r\n      const newTaskID = Array.from(start.taskIds);\r\n\r\n      newTaskID.splice(source.index, 1);\r\n      newTaskID.splice(destination.index, 0, draggableId);\r\n\r\n      const newcolumn = {\r\n        ...start,\r\n        taskIds: newTaskID,\r\n      };\r\n      const newstate = {\r\n        ...state,\r\n        colums: {\r\n          ...state.colums,\r\n          [newcolumn.id]: newcolumn,\r\n        },\r\n      };\r\n      console.log(\"Result start == finish\", results);\r\n      setstate(newstate);\r\n      console.log(\"rs\", results);\r\n      return;\r\n    }\r\n\r\n    const starttaskID = Array.from(start.taskIds);\r\n    starttaskID.splice(source.index, 1);\r\n    const newstart = {\r\n      ...start,\r\n      taskIds: starttaskID,\r\n    };\r\n\r\n    const finishtaskID = Array.from(finish.taskIds);\r\n    finishtaskID.splice(destination.index, 0, draggableId);\r\n    const newfinish = {\r\n      ...finish,\r\n      taskIds: finishtaskID,\r\n    };\r\n\r\n    const newstate = {\r\n      ...state,\r\n      colums: {\r\n        ...state.colums,\r\n        [newstart.id]: newstart,\r\n        [newfinish.id]: newfinish,\r\n      },\r\n    };\r\n    console.log(\"Result\", results);\r\n    setstate(newstate);\r\n  };\r\n  return (\r\n    <>\r\n      {console.log(\"state\", state)}\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div style={{ display: \"flex\" }}>\r\n          {/* {console.log(\"task, state\", state)} */}\r\n          {state.columOrder.map((columID, index) => {\r\n            const colum = state.colums[columID];\r\n            // console.log(\"colum,index\", colum, index);\r\n            const tasks = colum.taskIds.map((taskIds) => state.tasks[taskIds]);\r\n\r\n            // console.log(\"task\", tasks);\r\n            return (\r\n              <Column key={colum.id} column={colum} tasks={tasks}></Column>\r\n            );\r\n          })}\r\n        </div>\r\n      </DragDropContext>\r\n    </>\r\n  );\r\n};\r\nexport default LayoutDND;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}